{"version":3,"sources":["/esquery.js","/parser.js","/node_modules/estraverse/estraverse.js"],"names":["c","f","d","e","n","a","b","split","length","g","h","slice","l","m","k","i","type","value","toLowerCase","name","selectors","right","left","operator","test","j","index","Error","VisitorKeys","indexOf","subject","hasOwnProperty","call","push","apply","traverse","enter","unshift","leave","shift","parse","match","matches","query","Array","isArray","toString","define","amd","exports","esquery","constructor","prototype","replace","escape","I","charAt","seenCR","line","column","V","nextPos","result","p","charCodeAt","join","z","o","s","q","u","t","r","concat","map","reduce","y","J","K","L","U","X","W","C","D","E","F","G","O","M","N","S","T","P","Q","R","B","parseFloat","substr","RegExp","w","x","parseInt","H","sort","start","arguments","startRule","undefined","v","Math","max","A","SyntaxError","expected","found","message","offset","estraverse","parent","key","node","path","wrap","ref","range","extendedRange","leadingComments","splice","Break","Skip","trailingComments","AssignmentExpression","ArrayExpression","ArrayPattern","ArrowFunctionExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","DirectiveStatement","DoWhileStatement","EmptyStatement","ExpressionStatement","ForStatement","ForInStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","Literal","LabeledStatement","LogicalExpression","MemberExpression","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","Program","Property","ReturnStatement","SequenceExpression","SwitchStatement","SwitchCase","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","Object","__current","__leavelist","parents","current","__execute","__state","notify","skip","__initialize","visitor","root","__worklist","pop","version","Syntax","attachComments","VisitorOption","Controller"],"mappings":"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","sourceRoot":"..","sourcesContent":["/* vim: set sw=4 sts=4 : */\n(function () {\n\n    var estraverse = require('estraverse');\n    var parser = require('./parser');\n\n    var isArray = Array.isArray || function isArray(array) {\n        return {}.toString.call(array) === '[object Array]';\n    };\n\n    function esqueryModule() {\n\n        /**\n         * Get the value of a property which may be multiple levels down in the object.\n         */\n        function getPath(obj, key) {\n            var i, keys = key.split(\".\");\n            for (i = 0; i < keys.length; i++) {\n                if (obj == null) { return obj; }\n                obj = obj[keys[i]];\n            }\n            return obj;\n        }\n\n        /**\n         * Determine whether `node` can be reached by following `path`, starting at `ancestor`.\n         */\n        function inPath(node, ancestor, path) {\n            var field, remainingPath, i;\n            if (path.length === 0) { return node === ancestor; }\n            if (ancestor == null) { return false; }\n            field = ancestor[path[0]];\n            remainingPath = path.slice(1);\n            if (isArray(field)) {\n                for (i = 0, l = field.length; i < l; ++i) {\n                    if (inPath(node, field[i], remainingPath)) { return true; }\n                }\n                return false;\n            } else {\n                return inPath(node, field, remainingPath);\n            }\n        }\n\n        /**\n         * Given a `node` and its ancestors, determine if `node` is matched by `selector`.\n         */\n        function matches(node, selector, ancestry) {\n            var path, ancestor, i, l, p;\n            if (!selector) { return true; }\n            if (!node) { return false; }\n            if (!ancestry) { ancestry = []; }\n\n            switch(selector.type) {\n                case 'wildcard':\n                    return true;\n\n                case 'identifier':\n                    return selector.value.toLowerCase() === node.type.toLowerCase();\n\n                case 'field':\n                    path = selector.name.split('.');\n                    ancestor = ancestry[path.length - 1];\n                    return inPath(node, ancestor, path);\n\n                case 'matches':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (matches(node, selector.selectors[i], ancestry)) { return true; }\n                    }\n                    return false;\n\n                case 'compound':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (!matches(node, selector.selectors[i], ancestry)) { return false; }\n                    }\n                    return true;\n\n                case 'not':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (matches(node, selector.selectors[i], ancestry)) { return false; }\n                    }\n                    return true;\n\n                case 'child':\n                    if (matches(node, selector.right, ancestry)) {\n                        return matches(ancestry[0], selector.left, ancestry.slice(1));\n                    }\n                    return false;\n\n                case 'descendant':\n                    if (matches(node, selector.right, ancestry)) {\n                        for (i = 0, l = ancestry.length; i < l; ++i) {\n                            if (matches(ancestry[i], selector.left, ancestry.slice(i + 1))) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n\n                case 'attribute':\n                    p = getPath(node, selector.name);\n                    switch (selector.operator) {\n                        case null:\n                        case void 0:\n                            return p != null;\n                        case '=':\n                            switch (selector.value.type) {\n                                case 'regexp': return selector.value.value.test(p);\n                                case 'literal': return '' + selector.value.value === '' + p;\n                                case 'type': return selector.value.value === typeof p;\n                            }\n                        case '!=':\n                            switch (selector.value.type) {\n                                case 'regexp': return !selector.value.value.test(p);\n                                case 'literal': return '' + selector.value.value !== '' + p;\n                                case 'type': return selector.value.value !== typeof p;\n                            }\n                        case '<=': return p <= selector.value.value;\n                        case '<': return p < selector.value.value;\n                        case '>': return p > selector.value.value;\n                        case '>=': return p >= selector.value.value;\n                    }\n\n                case 'sibling':\n                    return matches(node, selector.right, ancestry) &&\n                        sibling(node, selector.left, ancestry) ||\n                        matches(node, selector.left, ancestry) &&\n                        sibling(node, selector.right, ancestry);\n\n                case 'adjacent':\n                    return matches(node, selector.right, ancestry) &&\n                        adjacent(node, selector.left, ancestry) ||\n                        matches(node, selector.left, ancestry) &&\n                        adjacent(node, selector.right, ancestry);\n\n                case 'nth-child':\n                    return matches(node, selector.right, ancestry) &&\n                        nthChild(node, ancestry, function (length) {\n                            return selector.index.value - 1;\n                        });\n\n                case 'nth-last-child':\n                    return matches(node, selector.right, ancestry) &&\n                        nthChild(node, ancestry, function (length) {\n                            return length - selector.index.value;\n                        });\n\n                case 'class':\n                    if(!node.type) return false;\n                    switch(selector.name.toLowerCase()){\n                        case 'statement':\n                            if(node.type.slice(-9) === 'Statement') return true;\n                            // fallthrough: interface Declaration <: Statement { }\n                        case 'declaration':\n                            return node.type.slice(-11) === 'Declaration';\n                        case 'pattern':\n                            if(node.type.slice(-7) === 'Pattern') return true;\n                            // fallthrough: interface Expression <: Node, Pattern { }\n                        case 'expression':\n                            return node.type.slice(-10) === 'Expression' ||\n                                node.type === 'Literal' ||\n                                node.type === 'Identifier';\n                        case 'function':\n                            return node.type.slice(0, 8) === 'Function' ||\n                                node.type === 'ArrowFunctionExpression';\n                    }\n                    throw new Error('Unknown class name: ' + selector.name);\n            }\n\n            throw new Error('Unknown selector type: ' + selector.type);\n        }\n\n        /*\n         * Determines if the given node has a sibling that matches the given selector.\n         */\n        function sibling(node, selector, ancestry) {\n            var parent = ancestry[0], listProp, keys, i, l, k, m;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    for (k = 0, m = listProp.length; k < m; ++k) {\n                        if (listProp[k] !== node && matches(listProp[k], selector, ancestry)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * Determines if the given node has an asjacent sibling that matches the given selector.\n         */\n        function adjacent(node, selector, ancestry) {\n            var parent = ancestry[0], listProp, keys, i, l, idx;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    idx = listProp.indexOf(node);\n                    if (idx < 0) { continue; }\n                    if (idx > 0 && matches(listProp[idx - 1], selector, ancestry)) {\n                        return true;\n                    }\n                    if (idx < listProp.length - 1 && matches(listProp[idx + 1], selector, ancestry)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * Determines if the given node is the nth child, determined by idxFn, which is given the containing list's length.\n         */\n        function nthChild(node, ancestry, idxFn) {\n            var parent = ancestry[0], listProp, keys, i, l, idx;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    idx = listProp.indexOf(node);\n                    if (idx >= 0 && idx === idxFn(listProp.length)) { return true; }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * For each selector node marked as a subject, find the portion of the selector that the subject must match.\n         */\n        function subjects(selector, ancestor) {\n            var results, p;\n            if (selector == null || typeof selector != 'object') { return []; }\n            if (ancestor == null) { ancestor = selector; }\n            results = selector.subject ? [ancestor] : [];\n            for(p in selector) {\n                if(!{}.hasOwnProperty.call(selector, p)) { continue; }\n                [].push.apply(results, subjects(selector[p], p === 'left' ? selector[p] : ancestor));\n            }\n            return results;\n        }\n\n        /**\n         * From a JS AST and a selector AST, collect all JS AST nodes that match the selector.\n         */\n        function match(ast, selector) {\n            var ancestry = [], results = [], altSubjects, i, l, k, m;\n            if (!selector) { return results; }\n            altSubjects = subjects(selector);\n            estraverse.traverse(ast, {\n                enter: function (node, parent) {\n                    if (parent != null) { ancestry.unshift(parent); }\n                    if (matches(node, selector, ancestry)) {\n                        if (altSubjects.length) {\n                            for (i = 0, l = altSubjects.length; i < l; ++i) {\n                                if (matches(node, altSubjects[i], ancestry)) { results.push(node); }\n                                for (k = 0, m = ancestry.length; k < m; ++k) {\n                                    if (matches(ancestry[k], altSubjects[i], ancestry.slice(k + 1))) {\n                                        results.push(ancestry[k]);\n                                    }\n                                }\n                            }\n                        } else {\n                            results.push(node);\n                        }\n                    }\n                },\n                leave: function () { ancestry.shift(); }\n            });\n            return results;\n        }\n\n        /**\n         * Parse a selector string and return its AST.\n         */\n        function parse(selector) {\n            return parser.parse(selector);\n        }\n\n        /**\n         * Query the code AST using the selector string.\n         */\n        function query(ast, selector) {\n            return match(ast, parse(selector));\n        }\n\n        query.parse = parse;\n        query.match = match;\n        query.matches = matches;\n        return query.query = query;\n    }\n\n\n    if (typeof define === \"function\" && define.amd) {\n        define(esqueryModule);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = esqueryModule();\n    } else {\n        this.esquery = esqueryModule();\n    }\n\n})();\n","var result = (function(){\n  /*\n   * Generated by PEG.js 0.7.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n  \n  function subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n  \n  function quote(s) {\n    /*\n     * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a\n     * string literal except for the closing quote character, backslash,\n     * carriage return, line separator, paragraph separator, and line feed.\n     * Any character may appear in the form of an escape sequence.\n     *\n     * For portability, we also escape escape all control and non-ASCII\n     * characters. Note that \"\\0\" and \"\\v\" escape sequences are not used\n     * because JSHint does not like the first and IE the second.\n     */\n     return '\"' + s\n      .replace(/\\\\/g, '\\\\\\\\')  // backslash\n      .replace(/\"/g, '\\\\\"')    // closing quote character\n      .replace(/\\x08/g, '\\\\b') // backspace\n      .replace(/\\t/g, '\\\\t')   // horizontal tab\n      .replace(/\\n/g, '\\\\n')   // line feed\n      .replace(/\\f/g, '\\\\f')   // form feed\n      .replace(/\\r/g, '\\\\r')   // carriage return\n      .replace(/[\\x00-\\x07\\x0B\\x0E-\\x1F\\x80-\\uFFFF]/g, escape)\n      + '\"';\n  }\n  \n  var result = {\n    /*\n     * Parses the input with a generated parser. If the parsing is successful,\n     * returns a value explicitly or implicitly specified by the grammar from\n     * which the parser was generated (see |PEG.buildParser|). If the parsing is\n     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.\n     */\n    parse: function(input) {\n      var parseFunctions = {\n        \"start\": parse_start\n      };\n      \n      var options = arguments.length > 1 ? arguments[1] : {},\n          startRule;\n      \n      if (options.startRule !== undefined) {\n        startRule = options.startRule;\n        \n        if (parseFunctions[startRule] === undefined) {\n          throw new Error(\"Can't start parsing from rule \" + quote(startRule) + \".\");\n        }\n      } else {\n        startRule = \"start\";\n      }\n      \n      var pos = 0;\n      var reportedPos = 0;\n      var cachedReportedPos = 0;\n      var cachedReportedPosDetails = { line: 1, column: 1, seenCR: false };\n      var reportFailures = 0;\n      var rightmostFailuresPos = 0;\n      var rightmostFailuresExpected = [];\n      var cache = {};\n      \n      function padLeft(input, padding, length) {\n        var result = input;\n        \n        var padLength = length - input.length;\n        for (var i = 0; i < padLength; i++) {\n          result = padding + result;\n        }\n        \n        return result;\n      }\n      \n      function escape(ch) {\n        var charCode = ch.charCodeAt(0);\n        var escapeChar;\n        var length;\n        \n        if (charCode <= 0xFF) {\n          escapeChar = 'x';\n          length = 2;\n        } else {\n          escapeChar = 'u';\n          length = 4;\n        }\n        \n        return '\\\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);\n      }\n      \n      function computeReportedPosDetails() {\n        function advanceCachedReportedPos() {\n          var ch;\n          \n          for (; cachedReportedPos < reportedPos; cachedReportedPos++) {\n            ch = input.charAt(cachedReportedPos);\n            if (ch === \"\\n\") {\n              if (!cachedReportedPosDetails.seenCR) { cachedReportedPosDetails.line++; }\n              cachedReportedPosDetails.column = 1;\n              cachedReportedPosDetails.seenCR = false;\n            } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n              cachedReportedPosDetails.line++;\n              cachedReportedPosDetails.column = 1;\n              cachedReportedPosDetails.seenCR = true;\n            } else {\n              cachedReportedPosDetails.column++;\n              cachedReportedPosDetails.seenCR = false;\n            }\n          }\n        }\n        \n        if (cachedReportedPos !== reportedPos) {\n          if (cachedReportedPos > reportedPos) {\n            cachedReportedPos = 0;\n            cachedReportedPosDetails = { line: 1, column: 1, seenCR: false };\n          }\n          advanceCachedReportedPos();\n        }\n        \n        return cachedReportedPosDetails;\n      }\n      \n      function text() {\n        return input.substring(reportedPos, pos);\n      }\n      \n      function offset() {\n        return reportedPos;\n      }\n      \n      function line() {\n        return computeReportedPosDetails().line;\n      }\n      \n      function column() {\n        return computeReportedPosDetails().column;\n      }\n      \n      function matchFailed(failure) {\n        if (pos < rightmostFailuresPos) {\n          return;\n        }\n        \n        if (pos > rightmostFailuresPos) {\n          rightmostFailuresPos = pos;\n          rightmostFailuresExpected = [];\n        }\n        \n        rightmostFailuresExpected.push(failure);\n      }\n      \n      function parse_start() {\n        var cacheKey = \"start@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1;\n        \n        r1 = pos;\n        r0 = parse_selectors();\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(ss) { return ss.length === 1 ? ss[0] : { type: 'matches', selectors: ss }; })(r0);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        if (r0 === null) {\n          r1 = pos;\n          r0 = \"\";\n          if (r0 !== null) {\n            reportedPos = r1;\n            r0 = (function() { return void 0; })();\n          }\n          if (r0 === null) {\n            pos = r1;\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse__() {\n        var cacheKey = \"_@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1;\n        \n        r0 = [];\n        if (input.charCodeAt(pos) === 32) {\n          r1 = \" \";\n          pos++;\n        } else {\n          r1 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\" \\\"\");\n          }\n        }\n        while (r1 !== null) {\n          r0.push(r1);\n          if (input.charCodeAt(pos) === 32) {\n            r1 = \" \";\n            pos++;\n          } else {\n            r1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\" \\\"\");\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_identifierName() {\n        var cacheKey = \"identifierName@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2;\n        \n        r1 = pos;\n        if (/^[^ [\\],():#!=><~+.]/.test(input.charAt(pos))) {\n          r2 = input.charAt(pos);\n          pos++;\n        } else {\n          r2 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[^ [\\\\],():#!=><~+.]\");\n          }\n        }\n        if (r2 !== null) {\n          r0 = [];\n          while (r2 !== null) {\n            r0.push(r2);\n            if (/^[^ [\\],():#!=><~+.]/.test(input.charAt(pos))) {\n              r2 = input.charAt(pos);\n              pos++;\n            } else {\n              r2 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^ [\\\\],():#!=><~+.]\");\n              }\n            }\n          }\n        } else {\n          r0 = null;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(i) { return i.join(''); })(r0);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_binaryOp() {\n        var cacheKey = \"binaryOp@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5;\n        \n        r1 = pos;\n        r2 = pos;\n        r3 = parse__();\n        if (r3 !== null) {\n          if (input.charCodeAt(pos) === 62) {\n            r4 = \">\";\n            pos++;\n          } else {\n            r4 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\">\\\"\");\n            }\n          }\n          if (r4 !== null) {\n            r5 = parse__();\n            if (r5 !== null) {\n              r0 = [r3, r4, r5];\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function() { return 'child'; })();\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        if (r0 === null) {\n          r1 = pos;\n          r2 = pos;\n          r3 = parse__();\n          if (r3 !== null) {\n            if (input.charCodeAt(pos) === 126) {\n              r4 = \"~\";\n              pos++;\n            } else {\n              r4 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"~\\\"\");\n              }\n            }\n            if (r4 !== null) {\n              r5 = parse__();\n              if (r5 !== null) {\n                r0 = [r3, r4, r5];\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n          if (r0 !== null) {\n            reportedPos = r1;\n            r0 = (function() { return 'sibling'; })();\n          }\n          if (r0 === null) {\n            pos = r1;\n          }\n          if (r0 === null) {\n            r1 = pos;\n            r2 = pos;\n            r3 = parse__();\n            if (r3 !== null) {\n              if (input.charCodeAt(pos) === 43) {\n                r4 = \"+\";\n                pos++;\n              } else {\n                r4 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"+\\\"\");\n                }\n              }\n              if (r4 !== null) {\n                r5 = parse__();\n                if (r5 !== null) {\n                  r0 = [r3, r4, r5];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n            if (r0 !== null) {\n              reportedPos = r1;\n              r0 = (function() { return 'adjacent'; })();\n            }\n            if (r0 === null) {\n              pos = r1;\n            }\n            if (r0 === null) {\n              r1 = pos;\n              r2 = pos;\n              if (input.charCodeAt(pos) === 32) {\n                r3 = \" \";\n                pos++;\n              } else {\n                r3 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\" \\\"\");\n                }\n              }\n              if (r3 !== null) {\n                r4 = parse__();\n                if (r4 !== null) {\n                  r0 = [r3, r4];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n              if (r0 !== null) {\n                reportedPos = r1;\n                r0 = (function() { return 'descendant'; })();\n              }\n              if (r0 === null) {\n                pos = r1;\n              }\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_selectors() {\n        var cacheKey = \"selectors@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10;\n        \n        r1 = pos;\n        r2 = pos;\n        r3 = parse_selector();\n        if (r3 !== null) {\n          r4 = [];\n          r6 = pos;\n          r7 = parse__();\n          if (r7 !== null) {\n            if (input.charCodeAt(pos) === 44) {\n              r8 = \",\";\n              pos++;\n            } else {\n              r8 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\",\\\"\");\n              }\n            }\n            if (r8 !== null) {\n              r9 = parse__();\n              if (r9 !== null) {\n                r10 = parse_selector();\n                if (r10 !== null) {\n                  r5 = [r7, r8, r9, r10];\n                } else {\n                  r5 = null;\n                  pos = r6;\n                }\n              } else {\n                r5 = null;\n                pos = r6;\n              }\n            } else {\n              r5 = null;\n              pos = r6;\n            }\n          } else {\n            r5 = null;\n            pos = r6;\n          }\n          while (r5 !== null) {\n            r4.push(r5);\n            r6 = pos;\n            r7 = parse__();\n            if (r7 !== null) {\n              if (input.charCodeAt(pos) === 44) {\n                r8 = \",\";\n                pos++;\n              } else {\n                r8 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\",\\\"\");\n                }\n              }\n              if (r8 !== null) {\n                r9 = parse__();\n                if (r9 !== null) {\n                  r10 = parse_selector();\n                  if (r10 !== null) {\n                    r5 = [r7, r8, r9, r10];\n                  } else {\n                    r5 = null;\n                    pos = r6;\n                  }\n                } else {\n                  r5 = null;\n                  pos = r6;\n                }\n              } else {\n                r5 = null;\n                pos = r6;\n              }\n            } else {\n              r5 = null;\n              pos = r6;\n            }\n          }\n          if (r4 !== null) {\n            r0 = [r3, r4];\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(s, ss) {\n          return [s].concat(ss.map(function (s) { return s[3]; }));\n        })(r3, r4);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_selector() {\n        var cacheKey = \"selector@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7, r8;\n        \n        r1 = pos;\n        r2 = pos;\n        r3 = parse_sequence();\n        if (r3 !== null) {\n          r4 = [];\n          r6 = pos;\n          r7 = parse_binaryOp();\n          if (r7 !== null) {\n            r8 = parse_sequence();\n            if (r8 !== null) {\n              r5 = [r7, r8];\n            } else {\n              r5 = null;\n              pos = r6;\n            }\n          } else {\n            r5 = null;\n            pos = r6;\n          }\n          while (r5 !== null) {\n            r4.push(r5);\n            r6 = pos;\n            r7 = parse_binaryOp();\n            if (r7 !== null) {\n              r8 = parse_sequence();\n              if (r8 !== null) {\n                r5 = [r7, r8];\n              } else {\n                r5 = null;\n                pos = r6;\n              }\n            } else {\n              r5 = null;\n              pos = r6;\n            }\n          }\n          if (r4 !== null) {\n            r0 = [r3, r4];\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(a, ops) {\n            return ops.reduce(function (memo, rhs) {\n              return { type: rhs[0], left: memo, right: rhs[1] };\n            }, a);\n          })(r3, r4);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_sequence() {\n        var cacheKey = \"sequence@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6;\n        \n        r1 = pos;\n        r3 = pos;\n        r4 = pos;\n        r5 = parse_atom();\n        if (r5 !== null) {\n          if (input.charCodeAt(pos) === 33) {\n            r6 = \"!\";\n            pos++;\n          } else {\n            r6 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"!\\\"\");\n            }\n          }\n          r6 = r6 !== null ? r6 : \"\";\n          if (r6 !== null) {\n            r2 = [r5, r6];\n          } else {\n            r2 = null;\n            pos = r4;\n          }\n        } else {\n          r2 = null;\n          pos = r4;\n        }\n        if (r2 !== null) {\n          reportedPos = r3;\n          r2 = (function(a, s) { if(s) a.subject = true; return a; })(r5, r6);\n        }\n        if (r2 === null) {\n          pos = r3;\n        }\n        if (r2 !== null) {\n          r0 = [];\n          while (r2 !== null) {\n            r0.push(r2);\n            r3 = pos;\n            r4 = pos;\n            r5 = parse_atom();\n            if (r5 !== null) {\n              if (input.charCodeAt(pos) === 33) {\n                r6 = \"!\";\n                pos++;\n              } else {\n                r6 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"!\\\"\");\n                }\n              }\n              r6 = r6 !== null ? r6 : \"\";\n              if (r6 !== null) {\n                r2 = [r5, r6];\n              } else {\n                r2 = null;\n                pos = r4;\n              }\n            } else {\n              r2 = null;\n              pos = r4;\n            }\n            if (r2 !== null) {\n              reportedPos = r3;\n              r2 = (function(a, s) { if(s) a.subject = true; return a; })(r5, r6);\n            }\n            if (r2 === null) {\n              pos = r3;\n            }\n          }\n        } else {\n          r0 = null;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(bs) {\n            return bs.length === 1 ? bs[0] : { type: 'compound', selectors: bs };\n          })(r0);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_atom() {\n        var cacheKey = \"atom@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0;\n        \n        r0 = parse_wildcard();\n        if (r0 === null) {\n          r0 = parse_identifier();\n          if (r0 === null) {\n            r0 = parse_attr();\n            if (r0 === null) {\n              r0 = parse_field();\n              if (r0 === null) {\n                r0 = parse_negation();\n                if (r0 === null) {\n                  r0 = parse_matches();\n                  if (r0 === null) {\n                    r0 = parse_firstChild();\n                    if (r0 === null) {\n                      r0 = parse_lastChild();\n                      if (r0 === null) {\n                        r0 = parse_nthChild();\n                        if (r0 === null) {\n                          r0 = parse_nthLastChild();\n                          if (r0 === null) {\n                            r0 = parse_class();\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_wildcard() {\n        var cacheKey = \"wildcard@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1;\n        \n        r1 = pos;\n        if (input.charCodeAt(pos) === 42) {\n          r0 = \"*\";\n          pos++;\n        } else {\n          r0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"*\\\"\");\n          }\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(a) { return { type: 'wildcard', value: a }; })(r0);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_identifier() {\n        var cacheKey = \"identifier@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.charCodeAt(pos) === 35) {\n          r3 = \"#\";\n          pos++;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"#\\\"\");\n          }\n        }\n        r3 = r3 !== null ? r3 : \"\";\n        if (r3 !== null) {\n          r4 = parse_identifierName();\n          if (r4 !== null) {\n            r0 = [r3, r4];\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(i) { return { type: 'identifier', value: i }; })(r4);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_attr() {\n        var cacheKey = \"attr@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.charCodeAt(pos) === 91) {\n          r3 = \"[\";\n          pos++;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"[\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          r4 = parse__();\n          if (r4 !== null) {\n            r5 = parse_attrValue();\n            if (r5 !== null) {\n              r6 = parse__();\n              if (r6 !== null) {\n                if (input.charCodeAt(pos) === 93) {\n                  r7 = \"]\";\n                  pos++;\n                } else {\n                  r7 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\"]\\\"\");\n                  }\n                }\n                if (r7 !== null) {\n                  r0 = [r3, r4, r5, r6, r7];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(v) { return v; })(r5);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_attrOps() {\n        var cacheKey = \"attrOps@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4;\n        \n        r1 = pos;\n        r2 = pos;\n        if (/^[><!]/.test(input.charAt(pos))) {\n          r3 = input.charAt(pos);\n          pos++;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[><!]\");\n          }\n        }\n        r3 = r3 !== null ? r3 : \"\";\n        if (r3 !== null) {\n          if (input.charCodeAt(pos) === 61) {\n            r4 = \"=\";\n            pos++;\n          } else {\n            r4 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"=\\\"\");\n            }\n          }\n          if (r4 !== null) {\n            r0 = [r3, r4];\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(a) { return a + '='; })(r3);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        if (r0 === null) {\n          if (/^[><]/.test(input.charAt(pos))) {\n            r0 = input.charAt(pos);\n            pos++;\n          } else {\n            r0 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[><]\");\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_attrEqOps() {\n        var cacheKey = \"attrEqOps@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.charCodeAt(pos) === 33) {\n          r3 = \"!\";\n          pos++;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"!\\\"\");\n          }\n        }\n        r3 = r3 !== null ? r3 : \"\";\n        if (r3 !== null) {\n          if (input.charCodeAt(pos) === 61) {\n            r4 = \"=\";\n            pos++;\n          } else {\n            r4 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"=\\\"\");\n            }\n          }\n          if (r4 !== null) {\n            r0 = [r3, r4];\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(a) { return a + '='; })(r3);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_attrName() {\n        var cacheKey = \"attrName@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2;\n        \n        r1 = pos;\n        r2 = parse_identifierName();\n        if (r2 === null) {\n          if (input.charCodeAt(pos) === 46) {\n            r2 = \".\";\n            pos++;\n          } else {\n            r2 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\".\\\"\");\n            }\n          }\n        }\n        if (r2 !== null) {\n          r0 = [];\n          while (r2 !== null) {\n            r0.push(r2);\n            r2 = parse_identifierName();\n            if (r2 === null) {\n              if (input.charCodeAt(pos) === 46) {\n                r2 = \".\";\n                pos++;\n              } else {\n                r2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\".\\\"\");\n                }\n              }\n            }\n          }\n        } else {\n          r0 = null;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(i) { return i.join(''); })(r0);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_attrValue() {\n        var cacheKey = \"attrValue@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7;\n        \n        r1 = pos;\n        r2 = pos;\n        r3 = parse_attrName();\n        if (r3 !== null) {\n          r4 = parse__();\n          if (r4 !== null) {\n            r5 = parse_attrEqOps();\n            if (r5 !== null) {\n              r6 = parse__();\n              if (r6 !== null) {\n                r7 = parse_type();\n                if (r7 === null) {\n                  r7 = parse_regex();\n                }\n                if (r7 !== null) {\n                  r0 = [r3, r4, r5, r6, r7];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(name, op, value) {\n              return { type: 'attribute', name: name, operator: op, value: value };\n            })(r3, r5, r7);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        if (r0 === null) {\n          r1 = pos;\n          r2 = pos;\n          r3 = parse_attrName();\n          if (r3 !== null) {\n            r4 = parse__();\n            if (r4 !== null) {\n              r5 = parse_attrOps();\n              if (r5 !== null) {\n                r6 = parse__();\n                if (r6 !== null) {\n                  r7 = parse_string();\n                  if (r7 === null) {\n                    r7 = parse_number();\n                    if (r7 === null) {\n                      r7 = parse_path();\n                    }\n                  }\n                  if (r7 !== null) {\n                    r0 = [r3, r4, r5, r6, r7];\n                  } else {\n                    r0 = null;\n                    pos = r2;\n                  }\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n          if (r0 !== null) {\n            reportedPos = r1;\n            r0 = (function(name, op, value) {\n                return { type: 'attribute', name: name, operator: op, value: value };\n              })(r3, r5, r7);\n          }\n          if (r0 === null) {\n            pos = r1;\n          }\n          if (r0 === null) {\n            r1 = pos;\n            r0 = parse_attrName();\n            if (r0 !== null) {\n              reportedPos = r1;\n              r0 = (function(name) { return { type: 'attribute', name: name }; })(r0);\n            }\n            if (r0 === null) {\n              pos = r1;\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_string() {\n        var cacheKey = \"string@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.charCodeAt(pos) === 34) {\n          r3 = \"\\\"\";\n          pos++;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"\\\\\\\"\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          r4 = [];\n          if (/^[^\\\\\"]/.test(input.charAt(pos))) {\n            r5 = input.charAt(pos);\n            pos++;\n          } else {\n            r5 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[^\\\\\\\\\\\"]\");\n            }\n          }\n          if (r5 === null) {\n            r6 = pos;\n            r7 = pos;\n            if (input.charCodeAt(pos) === 92) {\n              r8 = \"\\\\\";\n              pos++;\n            } else {\n              r8 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"\\\\\\\\\\\"\");\n              }\n            }\n            if (r8 !== null) {\n              if (input.length > pos) {\n                r9 = input.charAt(pos);\n                pos++;\n              } else {\n                r9 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"any character\");\n                }\n              }\n              if (r9 !== null) {\n                r5 = [r8, r9];\n              } else {\n                r5 = null;\n                pos = r7;\n              }\n            } else {\n              r5 = null;\n              pos = r7;\n            }\n            if (r5 !== null) {\n              reportedPos = r6;\n              r5 = (function(a, b) { return a + b; })(r8, r9);\n            }\n            if (r5 === null) {\n              pos = r6;\n            }\n          }\n          while (r5 !== null) {\n            r4.push(r5);\n            if (/^[^\\\\\"]/.test(input.charAt(pos))) {\n              r5 = input.charAt(pos);\n              pos++;\n            } else {\n              r5 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^\\\\\\\\\\\"]\");\n              }\n            }\n            if (r5 === null) {\n              r6 = pos;\n              r7 = pos;\n              if (input.charCodeAt(pos) === 92) {\n                r8 = \"\\\\\";\n                pos++;\n              } else {\n                r8 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"\\\\\\\\\\\"\");\n                }\n              }\n              if (r8 !== null) {\n                if (input.length > pos) {\n                  r9 = input.charAt(pos);\n                  pos++;\n                } else {\n                  r9 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"any character\");\n                  }\n                }\n                if (r9 !== null) {\n                  r5 = [r8, r9];\n                } else {\n                  r5 = null;\n                  pos = r7;\n                }\n              } else {\n                r5 = null;\n                pos = r7;\n              }\n              if (r5 !== null) {\n                reportedPos = r6;\n                r5 = (function(a, b) { return a + b; })(r8, r9);\n              }\n              if (r5 === null) {\n                pos = r6;\n              }\n            }\n          }\n          if (r4 !== null) {\n            if (input.charCodeAt(pos) === 34) {\n              r5 = \"\\\"\";\n              pos++;\n            } else {\n              r5 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"\\\\\\\"\\\"\");\n              }\n            }\n            if (r5 !== null) {\n              r0 = [r3, r4, r5];\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(d) {\n                return { type: 'literal', value: strUnescape(d.join('')) };\n              })(r4);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        if (r0 === null) {\n          r1 = pos;\n          r2 = pos;\n          if (input.charCodeAt(pos) === 39) {\n            r3 = \"'\";\n            pos++;\n          } else {\n            r3 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"'\\\"\");\n            }\n          }\n          if (r3 !== null) {\n            r4 = [];\n            if (/^[^\\\\']/.test(input.charAt(pos))) {\n              r5 = input.charAt(pos);\n              pos++;\n            } else {\n              r5 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^\\\\\\\\']\");\n              }\n            }\n            if (r5 === null) {\n              r6 = pos;\n              r7 = pos;\n              if (input.charCodeAt(pos) === 92) {\n                r8 = \"\\\\\";\n                pos++;\n              } else {\n                r8 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"\\\\\\\\\\\"\");\n                }\n              }\n              if (r8 !== null) {\n                if (input.length > pos) {\n                  r9 = input.charAt(pos);\n                  pos++;\n                } else {\n                  r9 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"any character\");\n                  }\n                }\n                if (r9 !== null) {\n                  r5 = [r8, r9];\n                } else {\n                  r5 = null;\n                  pos = r7;\n                }\n              } else {\n                r5 = null;\n                pos = r7;\n              }\n              if (r5 !== null) {\n                reportedPos = r6;\n                r5 = (function(a, b) { return a + b; })(r8, r9);\n              }\n              if (r5 === null) {\n                pos = r6;\n              }\n            }\n            while (r5 !== null) {\n              r4.push(r5);\n              if (/^[^\\\\']/.test(input.charAt(pos))) {\n                r5 = input.charAt(pos);\n                pos++;\n              } else {\n                r5 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[^\\\\\\\\']\");\n                }\n              }\n              if (r5 === null) {\n                r6 = pos;\n                r7 = pos;\n                if (input.charCodeAt(pos) === 92) {\n                  r8 = \"\\\\\";\n                  pos++;\n                } else {\n                  r8 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\"\\\\\\\\\\\"\");\n                  }\n                }\n                if (r8 !== null) {\n                  if (input.length > pos) {\n                    r9 = input.charAt(pos);\n                    pos++;\n                  } else {\n                    r9 = null;\n                    if (reportFailures === 0) {\n                      matchFailed(\"any character\");\n                    }\n                  }\n                  if (r9 !== null) {\n                    r5 = [r8, r9];\n                  } else {\n                    r5 = null;\n                    pos = r7;\n                  }\n                } else {\n                  r5 = null;\n                  pos = r7;\n                }\n                if (r5 !== null) {\n                  reportedPos = r6;\n                  r5 = (function(a, b) { return a + b; })(r8, r9);\n                }\n                if (r5 === null) {\n                  pos = r6;\n                }\n              }\n            }\n            if (r4 !== null) {\n              if (input.charCodeAt(pos) === 39) {\n                r5 = \"'\";\n                pos++;\n              } else {\n                r5 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"'\\\"\");\n                }\n              }\n              if (r5 !== null) {\n                r0 = [r3, r4, r5];\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n          if (r0 !== null) {\n            reportedPos = r1;\n            r0 = (function(d) {\n                  return { type: 'literal', value: strUnescape(d.join('')) };\n                })(r4);\n          }\n          if (r0 === null) {\n            pos = r1;\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_number() {\n        var cacheKey = \"number@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6;\n        \n        r1 = pos;\n        r2 = pos;\n        r4 = pos;\n        r5 = [];\n        if (/^[0-9]/.test(input.charAt(pos))) {\n          r6 = input.charAt(pos);\n          pos++;\n        } else {\n          r6 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[0-9]\");\n          }\n        }\n        while (r6 !== null) {\n          r5.push(r6);\n          if (/^[0-9]/.test(input.charAt(pos))) {\n            r6 = input.charAt(pos);\n            pos++;\n          } else {\n            r6 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[0-9]\");\n            }\n          }\n        }\n        if (r5 !== null) {\n          if (input.charCodeAt(pos) === 46) {\n            r6 = \".\";\n            pos++;\n          } else {\n            r6 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\".\\\"\");\n            }\n          }\n          if (r6 !== null) {\n            r3 = [r5, r6];\n          } else {\n            r3 = null;\n            pos = r4;\n          }\n        } else {\n          r3 = null;\n          pos = r4;\n        }\n        r3 = r3 !== null ? r3 : \"\";\n        if (r3 !== null) {\n          if (/^[0-9]/.test(input.charAt(pos))) {\n            r5 = input.charAt(pos);\n            pos++;\n          } else {\n            r5 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[0-9]\");\n            }\n          }\n          if (r5 !== null) {\n            r4 = [];\n            while (r5 !== null) {\n              r4.push(r5);\n              if (/^[0-9]/.test(input.charAt(pos))) {\n                r5 = input.charAt(pos);\n                pos++;\n              } else {\n                r5 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[0-9]\");\n                }\n              }\n            }\n          } else {\n            r4 = null;\n          }\n          if (r4 !== null) {\n            r0 = [r3, r4];\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(a, b) {\n                return { type: 'literal', value: parseFloat((a ? a.join('') : '') + b.join('')) };\n              })(r3, r4);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_path() {\n        var cacheKey = \"path@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1;\n        \n        r1 = pos;\n        r0 = parse_identifierName();\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(i) { return { type: 'literal', value: i }; })(r0);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_type() {\n        var cacheKey = \"type@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.substr(pos, 5) === \"type(\") {\n          r3 = \"type(\";\n          pos += 5;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"type(\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          r4 = parse__();\n          if (r4 !== null) {\n            if (/^[^ )]/.test(input.charAt(pos))) {\n              r6 = input.charAt(pos);\n              pos++;\n            } else {\n              r6 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^ )]\");\n              }\n            }\n            if (r6 !== null) {\n              r5 = [];\n              while (r6 !== null) {\n                r5.push(r6);\n                if (/^[^ )]/.test(input.charAt(pos))) {\n                  r6 = input.charAt(pos);\n                  pos++;\n                } else {\n                  r6 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"[^ )]\");\n                  }\n                }\n              }\n            } else {\n              r5 = null;\n            }\n            if (r5 !== null) {\n              r6 = parse__();\n              if (r6 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  r7 = \")\";\n                  pos++;\n                } else {\n                  r7 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (r7 !== null) {\n                  r0 = [r3, r4, r5, r6, r7];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(t) { return { type: 'type', value: t.join('') }; })(r5);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_regex() {\n        var cacheKey = \"regex@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.charCodeAt(pos) === 47) {\n          r3 = \"/\";\n          pos++;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"/\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          if (/^[^\\/]/.test(input.charAt(pos))) {\n            r5 = input.charAt(pos);\n            pos++;\n          } else {\n            r5 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[^\\\\/]\");\n            }\n          }\n          if (r5 !== null) {\n            r4 = [];\n            while (r5 !== null) {\n              r4.push(r5);\n              if (/^[^\\/]/.test(input.charAt(pos))) {\n                r5 = input.charAt(pos);\n                pos++;\n              } else {\n                r5 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[^\\\\/]\");\n                }\n              }\n            }\n          } else {\n            r4 = null;\n          }\n          if (r4 !== null) {\n            if (input.charCodeAt(pos) === 47) {\n              r5 = \"/\";\n              pos++;\n            } else {\n              r5 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"/\\\"\");\n              }\n            }\n            if (r5 !== null) {\n              r0 = [r3, r4, r5];\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(d) { return { type: 'regexp', value: new RegExp(d.join('')) }; })(r4);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_field() {\n        var cacheKey = \"field@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7, r8, r9;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.charCodeAt(pos) === 46) {\n          r3 = \".\";\n          pos++;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\".\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          r4 = parse_identifierName();\n          if (r4 !== null) {\n            r5 = [];\n            r7 = pos;\n            if (input.charCodeAt(pos) === 46) {\n              r8 = \".\";\n              pos++;\n            } else {\n              r8 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\".\\\"\");\n              }\n            }\n            if (r8 !== null) {\n              r9 = parse_identifierName();\n              if (r9 !== null) {\n                r6 = [r8, r9];\n              } else {\n                r6 = null;\n                pos = r7;\n              }\n            } else {\n              r6 = null;\n              pos = r7;\n            }\n            while (r6 !== null) {\n              r5.push(r6);\n              r7 = pos;\n              if (input.charCodeAt(pos) === 46) {\n                r8 = \".\";\n                pos++;\n              } else {\n                r8 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\".\\\"\");\n                }\n              }\n              if (r8 !== null) {\n                r9 = parse_identifierName();\n                if (r9 !== null) {\n                  r6 = [r8, r9];\n                } else {\n                  r6 = null;\n                  pos = r7;\n                }\n              } else {\n                r6 = null;\n                pos = r7;\n              }\n            }\n            if (r5 !== null) {\n              r0 = [r3, r4, r5];\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(i, is) {\n          return { type: 'field', name: is.reduce(function(memo, p){ return memo + p[0] + p[1]; }, i)};\n        })(r4, r5);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_negation() {\n        var cacheKey = \"negation@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.substr(pos, 5) === \":not(\") {\n          r3 = \":not(\";\n          pos += 5;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":not(\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          r4 = parse__();\n          if (r4 !== null) {\n            r5 = parse_selectors();\n            if (r5 !== null) {\n              r6 = parse__();\n              if (r6 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  r7 = \")\";\n                  pos++;\n                } else {\n                  r7 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (r7 !== null) {\n                  r0 = [r3, r4, r5, r6, r7];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(ss) { return { type: 'not', selectors: ss }; })(r5);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_matches() {\n        var cacheKey = \"matches@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.substr(pos, 9) === \":matches(\") {\n          r3 = \":matches(\";\n          pos += 9;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":matches(\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          r4 = parse__();\n          if (r4 !== null) {\n            r5 = parse_selectors();\n            if (r5 !== null) {\n              r6 = parse__();\n              if (r6 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  r7 = \")\";\n                  pos++;\n                } else {\n                  r7 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (r7 !== null) {\n                  r0 = [r3, r4, r5, r6, r7];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(ss) { return { type: 'matches', selectors: ss }; })(r5);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_firstChild() {\n        var cacheKey = \"firstChild@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1;\n        \n        r1 = pos;\n        if (input.substr(pos, 12) === \":first-child\") {\n          r0 = \":first-child\";\n          pos += 12;\n        } else {\n          r0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":first-child\\\"\");\n          }\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function() { return nth(1); })();\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_lastChild() {\n        var cacheKey = \"lastChild@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1;\n        \n        r1 = pos;\n        if (input.substr(pos, 11) === \":last-child\") {\n          r0 = \":last-child\";\n          pos += 11;\n        } else {\n          r0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":last-child\\\"\");\n          }\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function() { return nthLast(1); })();\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_nthChild() {\n        var cacheKey = \"nthChild@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.substr(pos, 11) === \":nth-child(\") {\n          r3 = \":nth-child(\";\n          pos += 11;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":nth-child(\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          r4 = parse__();\n          if (r4 !== null) {\n            if (/^[0-9]/.test(input.charAt(pos))) {\n              r6 = input.charAt(pos);\n              pos++;\n            } else {\n              r6 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[0-9]\");\n              }\n            }\n            if (r6 !== null) {\n              r5 = [];\n              while (r6 !== null) {\n                r5.push(r6);\n                if (/^[0-9]/.test(input.charAt(pos))) {\n                  r6 = input.charAt(pos);\n                  pos++;\n                } else {\n                  r6 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"[0-9]\");\n                  }\n                }\n              }\n            } else {\n              r5 = null;\n            }\n            if (r5 !== null) {\n              r6 = parse__();\n              if (r6 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  r7 = \")\";\n                  pos++;\n                } else {\n                  r7 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (r7 !== null) {\n                  r0 = [r3, r4, r5, r6, r7];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(n) { return nth(parseInt(n.join(''), 10)); })(r5);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_nthLastChild() {\n        var cacheKey = \"nthLastChild@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4, r5, r6, r7;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.substr(pos, 16) === \":nth-last-child(\") {\n          r3 = \":nth-last-child(\";\n          pos += 16;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":nth-last-child(\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          r4 = parse__();\n          if (r4 !== null) {\n            if (/^[0-9]/.test(input.charAt(pos))) {\n              r6 = input.charAt(pos);\n              pos++;\n            } else {\n              r6 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[0-9]\");\n              }\n            }\n            if (r6 !== null) {\n              r5 = [];\n              while (r6 !== null) {\n                r5.push(r6);\n                if (/^[0-9]/.test(input.charAt(pos))) {\n                  r6 = input.charAt(pos);\n                  pos++;\n                } else {\n                  r6 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"[0-9]\");\n                  }\n                }\n              }\n            } else {\n              r5 = null;\n            }\n            if (r5 !== null) {\n              r6 = parse__();\n              if (r6 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  r7 = \")\";\n                  pos++;\n                } else {\n                  r7 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (r7 !== null) {\n                  r0 = [r3, r4, r5, r6, r7];\n                } else {\n                  r0 = null;\n                  pos = r2;\n                }\n              } else {\n                r0 = null;\n                pos = r2;\n              }\n            } else {\n              r0 = null;\n              pos = r2;\n            }\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(n) { return nthLast(parseInt(n.join(''), 10)); })(r5);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      function parse_class() {\n        var cacheKey = \"class@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var r0, r1, r2, r3, r4;\n        \n        r1 = pos;\n        r2 = pos;\n        if (input.charCodeAt(pos) === 58) {\n          r3 = \":\";\n          pos++;\n        } else {\n          r3 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":\\\"\");\n          }\n        }\n        if (r3 !== null) {\n          if (input.substr(pos, 9).toLowerCase() === \"statement\") {\n            r4 = input.substr(pos, 9);\n            pos += 9;\n          } else {\n            r4 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"statement\\\"\");\n            }\n          }\n          if (r4 === null) {\n            if (input.substr(pos, 10).toLowerCase() === \"expression\") {\n              r4 = input.substr(pos, 10);\n              pos += 10;\n            } else {\n              r4 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"expression\\\"\");\n              }\n            }\n            if (r4 === null) {\n              if (input.substr(pos, 11).toLowerCase() === \"declaration\") {\n                r4 = input.substr(pos, 11);\n                pos += 11;\n              } else {\n                r4 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"declaration\\\"\");\n                }\n              }\n              if (r4 === null) {\n                if (input.substr(pos, 8).toLowerCase() === \"function\") {\n                  r4 = input.substr(pos, 8);\n                  pos += 8;\n                } else {\n                  r4 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\"function\\\"\");\n                  }\n                }\n                if (r4 === null) {\n                  if (input.substr(pos, 7).toLowerCase() === \"pattern\") {\n                    r4 = input.substr(pos, 7);\n                    pos += 7;\n                  } else {\n                    r4 = null;\n                    if (reportFailures === 0) {\n                      matchFailed(\"\\\"pattern\\\"\");\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (r4 !== null) {\n            r0 = [r3, r4];\n          } else {\n            r0 = null;\n            pos = r2;\n          }\n        } else {\n          r0 = null;\n          pos = r2;\n        }\n        if (r0 !== null) {\n          reportedPos = r1;\n          r0 = (function(c) {\n          return { type: 'class', name: c };\n        })(r4);\n        }\n        if (r0 === null) {\n          pos = r1;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  r0\n        };\n        return r0;\n      }\n      \n      \n      function cleanupExpected(expected) {\n        expected.sort();\n        \n        var lastExpected = null;\n        var cleanExpected = [];\n        for (var i = 0; i < expected.length; i++) {\n          if (expected[i] !== lastExpected) {\n            cleanExpected.push(expected[i]);\n            lastExpected = expected[i];\n          }\n        }\n        return cleanExpected;\n      }\n      \n      \n        function nth(n) { return { type: 'nth-child', index: { type: 'literal', value: n } }; }\n        function nthLast(n) { return { type: 'nth-last-child', index: { type: 'literal', value: n } }; }\n        function strUnescape(s) {\n          return s.replace(/\\\\(.)/g, function(match, ch) {\n            switch(ch) {\n              case 'a': return '\\a';\n              case 'b': return '\\b';\n              case 'f': return '\\f';\n              case 'n': return '\\n';\n              case 'r': return '\\r';\n              case 't': return '\\t';\n              case 'v': return '\\v';\n              default: return ch;\n            }\n          });\n        }\n      \n      \n      var result = parseFunctions[startRule]();\n      \n      /*\n       * The parser is now in one of the following three states:\n       *\n       * 1. The parser successfully parsed the whole input.\n       *\n       *    - |result !== null|\n       *    - |pos === input.length|\n       *    - |rightmostFailuresExpected| may or may not contain something\n       *\n       * 2. The parser successfully parsed only a part of the input.\n       *\n       *    - |result !== null|\n       *    - |pos < input.length|\n       *    - |rightmostFailuresExpected| may or may not contain something\n       *\n       * 3. The parser did not successfully parse any part of the input.\n       *\n       *   - |result === null|\n       *   - |pos === 0|\n       *   - |rightmostFailuresExpected| contains at least one failure\n       *\n       * All code following this comment (including called functions) must\n       * handle these states.\n       */\n      if (result === null || pos !== input.length) {\n        reportedPos = Math.max(pos, rightmostFailuresPos);\n        var found = reportedPos < input.length ? input.charAt(reportedPos) : null;\n        var reportedPosDetails = computeReportedPosDetails();\n        \n        throw new this.SyntaxError(\n          cleanupExpected(rightmostFailuresExpected),\n          found,\n          reportedPos,\n          reportedPosDetails.line,\n          reportedPosDetails.column\n        );\n      }\n      \n      return result;\n    }\n  };\n  \n  /* Thrown when a parser encounters a syntax error. */\n  \n  result.SyntaxError = function(expected, found, offset, line, column) {\n    function buildMessage(expected, found) {\n      var expectedHumanized, foundHumanized;\n      \n      switch (expected.length) {\n        case 0:\n          expectedHumanized = \"end of input\";\n          break;\n        case 1:\n          expectedHumanized = expected[0];\n          break;\n        default:\n          expectedHumanized = expected.slice(0, expected.length - 1).join(\", \")\n            + \" or \"\n            + expected[expected.length - 1];\n      }\n      \n      foundHumanized = found ? quote(found) : \"end of input\";\n      \n      return \"Expected \" + expectedHumanized + \" but \" + foundHumanized + \" found.\";\n    }\n    \n    this.name = \"SyntaxError\";\n    this.expected = expected;\n    this.found = found;\n    this.message = buildMessage(expected, found);\n    this.offset = offset;\n    this.line = line;\n    this.column = column;\n  };\n  \n  subclass(result.SyntaxError, Error);\n  \n  return result;\n})();\nif (typeof define === \"function\" && define.amd) { define(function(){ return result; }); } else if (typeof module !== \"undefined\" && module.exports) { module.exports = result; } else { this.esquery = result; }\n","/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true, define:true*/\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // and plain browser loading,\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.estraverse = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Syntax,\n        isArray,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP;\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MethodDefinition: 'MethodDefinition',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    function ignoreJSHintError() { }\n\n    isArray = Array.isArray;\n    if (!isArray) {\n        isArray = function isArray(array) {\n            return Object.prototype.toString.call(array) === '[object Array]';\n        };\n    }\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    function shallowCopy(obj) {\n        var ret = {}, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    ignoreJSHintError(shallowCopy);\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    function lowerBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                i = current + 1;\n                len -= diff + 1;\n            } else {\n                len = diff;\n            }\n        }\n        return i;\n    }\n    ignoreJSHintError(lowerBound);\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'body', 'superClass'],\n        ClassExpression: ['id', 'body', 'superClass'],\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MethodDefinition: ['key', 'value'],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handlers', 'handler', 'guardedHandlers', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n    };\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = element.wrap || node.type;\n                candidates = VisitorKeys[nodeType];\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (!isArray(candidate)) {\n                        worklist.push(new Element(candidate, key, null, null));\n                        continue;\n                    }\n\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if ((nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === candidates[current]) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', null);\n                        } else {\n                            element = new Element(candidate[current2], [key, current2], null, null);\n                        }\n                        worklist.push(element);\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = element.wrap || node.type;\n            candidates = VisitorKeys[nodeType];\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (!isArray(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                    continue;\n                }\n\n                current2 = candidate.length;\n                while ((current2 -= 1) >= 0) {\n                    if (!candidate[current2]) {\n                        continue;\n                    }\n                    if (nodeType === Syntax.ObjectExpression && 'properties' === candidates[current]) {\n                        element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                    } else {\n                        element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                    }\n                    worklist.push(element);\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.version = '1.3.3-dev';\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n"]}