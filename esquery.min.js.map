{"version":3,"sources":["/esquery.js","/parser.js","/node_modules/estraverse/estraverse.js"],"names":["c","f","d","e","n","a","b","split","length","g","h","slice","l","m","k","i","type","value","toLowerCase","name","selectors","right","left","operator","test","j","index","Error","VisitorKeys","indexOf","subject","hasOwnProperty","call","push","apply","traverse","enter","unshift","leave","shift","parse","match","matches","query","Array","isArray","toString","define","amd","exports","esquery","replace","escape","U","nextPos","result","charCodeAt","charAt","join","t","p","q","r","o","concat","map","reduce","s","H","I","M","z","A","B","C","D","E","F","G","Q","N","O","x","y","R","v","w","L","parseFloat","substr","RegExp","J","K","parseInt","T","sort","S","Math","max","line","column","start","_","identifierName","binaryOp","selector","sequence","atom","wildcard","identifier","attr","attrOps","attrEqOps","attrName","attrValue","string","number","path","regex","field","negation","firstChild","lastChild","nthChild","nthLastChild","undefined","P","u","SyntaxError","toSource","_source","expected","found","message","offset","prototype","estraverse","parent","key","node","wrap","ref","range","extendedRange","leadingComments","splice","Break","Skip","trailingComments","AssignmentExpression","ArrayExpression","ArrayPattern","ArrowFunctionExpression","BlockStatement","BinaryExpression","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","DirectiveStatement","DoWhileStatement","EmptyStatement","ExpressionStatement","ForStatement","ForInStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","Literal","LabeledStatement","LogicalExpression","MemberExpression","MethodDefinition","NewExpression","ObjectExpression","ObjectPattern","Program","Property","ReturnStatement","SequenceExpression","SwitchStatement","SwitchCase","ThisExpression","ThrowStatement","TryStatement","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","Object","__current","__leavelist","parents","current","__execute","__state","notify","skip","__initialize","visitor","root","__worklist","pop","version","Syntax","attachComments","VisitorOption","Controller"],"mappings":"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","sourceRoot":"..","sourcesContent":["/* vim: set sw=4 sts=4 : */\n(function () {\n\n    var estraverse = require('estraverse');\n    var parser = require('./parser');\n\n    var isArray = Array.isArray || function isArray(array) {\n        return {}.toString.call(array) === '[object Array]';\n    };\n\n    function esqueryModule() {\n\n        /**\n         * Get the value of a property which may be multiple levels down in the object.\n         */\n        function getPath(obj, key) {\n            var i, keys = key.split(\".\");\n            for (i = 0; i < keys.length; i++) {\n                if (obj == null) { return obj; }\n                obj = obj[keys[i]];\n            }\n            return obj;\n        }\n\n        /**\n         * Determine whether `node` can be reached by following `path`, starting at `ancestor`.\n         */\n        function inPath(node, ancestor, path) {\n            var field, remainingPath, i;\n            if (path.length === 0) { return node === ancestor; }\n            if (ancestor == null) { return false; }\n            field = ancestor[path[0]];\n            remainingPath = path.slice(1);\n            if (isArray(field)) {\n                for (i = 0, l = field.length; i < l; ++i) {\n                    if (inPath(node, field[i], remainingPath)) { return true; }\n                }\n                return false;\n            } else {\n                return inPath(node, field, remainingPath);\n            }\n        }\n\n        /**\n         * Given a `node` and its ancestors, determine if `node` is matched by `selector`.\n         */\n        function matches(node, selector, ancestry) {\n            var path, ancestor, i, l, p;\n            if (!selector) { return true; }\n            if (!node) { return false; }\n            if (!ancestry) { ancestry = []; }\n\n            switch(selector.type) {\n                case 'wildcard':\n                    return true;\n\n                case 'identifier':\n                    return selector.value.toLowerCase() === node.type.toLowerCase();\n\n                case 'field':\n                    path = selector.name.split('.');\n                    ancestor = ancestry[path.length - 1];\n                    return inPath(node, ancestor, path);\n\n                case 'matches':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (matches(node, selector.selectors[i], ancestry)) { return true; }\n                    }\n                    return false;\n\n                case 'compound':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (!matches(node, selector.selectors[i], ancestry)) { return false; }\n                    }\n                    return true;\n\n                case 'not':\n                    for (i = 0, l = selector.selectors.length; i < l; ++i) {\n                        if (matches(node, selector.selectors[i], ancestry)) { return false; }\n                    }\n                    return true;\n\n                case 'child':\n                    if (matches(node, selector.right, ancestry)) {\n                        return matches(ancestry[0], selector.left, ancestry.slice(1));\n                    }\n                    return false;\n\n                case 'descendant':\n                    if (matches(node, selector.right, ancestry)) {\n                        for (i = 0, l = ancestry.length; i < l; ++i) {\n                            if (matches(ancestry[i], selector.left, ancestry.slice(i + 1))) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n\n                case 'attribute':\n                    p = getPath(node, selector.name);\n                    switch (selector.operator) {\n                        case null:\n                        case void 0:\n                            return p != null;\n                        case '=':\n                            switch (selector.value.type) {\n                                case 'regexp': return selector.value.value.test(p);\n                                case 'literal': return '' + selector.value.value === '' + p;\n                                case 'type': return selector.value.value === typeof p;\n                            }\n                        case '!=':\n                            switch (selector.value.type) {\n                                case 'regexp': return !selector.value.value.test(p);\n                                case 'literal': return '' + selector.value.value !== '' + p;\n                                case 'type': return selector.value.value !== typeof p;\n                            }\n                        case '<=': return p <= selector.value.value;\n                        case '<': return p < selector.value.value;\n                        case '>': return p > selector.value.value;\n                        case '>=': return p >= selector.value.value;\n                    }\n\n                case 'sibling':\n                    return matches(node, selector.right, ancestry) &&\n                        sibling(node, selector.left, ancestry) ||\n                        matches(node, selector.left, ancestry) &&\n                        sibling(node, selector.right, ancestry);\n\n                case 'adjacent':\n                    return matches(node, selector.right, ancestry) &&\n                        adjacent(node, selector.left, ancestry) ||\n                        matches(node, selector.left, ancestry) &&\n                        adjacent(node, selector.right, ancestry);\n\n                case 'nth-child':\n                    return matches(node, selector.right, ancestry) &&\n                        nthChild(node, ancestry, function (length) {\n                            return selector.index.value - 1;\n                        });\n\n                case 'nth-last-child':\n                    return matches(node, selector.right, ancestry) &&\n                        nthChild(node, ancestry, function (length) {\n                            return length - selector.index.value;\n                        });\n\n                case 'class':\n                    if(!node.type) return false;\n                    switch(selector.name.toLowerCase()){\n                        case 'statement':\n                            if(node.type.slice(-9) === 'Statement') return true;\n                            // fallthrough: interface Declaration <: Statement { }\n                        case 'declaration':\n                            return node.type.slice(-11) === 'Declaration';\n                        case 'pattern':\n                            if(node.type.slice(-7) === 'Pattern') return true;\n                            // fallthrough: interface Expression <: Node, Pattern { }\n                        case 'expression':\n                            return node.type.slice(-10) === 'Expression' ||\n                                node.type === 'Literal' ||\n                                node.type === 'Identifier';\n                        case 'function':\n                            return node.type.slice(0, 8) === 'Function' ||\n                                node.type === 'ArrowFunctionExpression';\n                    }\n                    throw new Error('Unknown class name: ' + selector.name);\n            }\n\n            throw new Error('Unknown selector type: ' + selector.type);\n        }\n\n        /*\n         * Determines if the given node has a sibling that matches the given selector.\n         */\n        function sibling(node, selector, ancestry) {\n            var parent = ancestry[0], listProp, keys, i, l, k, m;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    for (k = 0, m = listProp.length; k < m; ++k) {\n                        if (listProp[k] !== node && matches(listProp[k], selector, ancestry)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * Determines if the given node has an asjacent sibling that matches the given selector.\n         */\n        function adjacent(node, selector, ancestry) {\n            var parent = ancestry[0], listProp, keys, i, l, idx;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    idx = listProp.indexOf(node);\n                    if (idx < 0) { continue; }\n                    if (idx > 0 && matches(listProp[idx - 1], selector, ancestry)) {\n                        return true;\n                    }\n                    if (idx < listProp.length - 1 && matches(listProp[idx + 1], selector, ancestry)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * Determines if the given node is the nth child, determined by idxFn, which is given the containing list's length.\n         */\n        function nthChild(node, ancestry, idxFn) {\n            var parent = ancestry[0], listProp, keys, i, l, idx;\n            if (!parent) { return false; }\n            keys = estraverse.VisitorKeys[parent.type];\n            for (i = 0, l = keys.length; i < l; ++i) {\n                listProp = parent[keys[i]];\n                if (isArray(listProp)) {\n                    idx = listProp.indexOf(node);\n                    if (idx >= 0 && idx === idxFn(listProp.length)) { return true; }\n                }\n            }\n            return false;\n        }\n\n        /*\n         * For each selector node marked as a subject, find the portion of the selector that the subject must match.\n         */\n        function subjects(selector, ancestor) {\n            var results, p;\n            if (selector == null || typeof selector != 'object') { return []; }\n            if (ancestor == null) { ancestor = selector; }\n            results = selector.subject ? [ancestor] : [];\n            for(p in selector) {\n                if(!{}.hasOwnProperty.call(selector, p)) { continue; }\n                [].push.apply(results, subjects(selector[p], p === 'left' ? selector[p] : ancestor));\n            }\n            return results;\n        }\n\n        /**\n         * From a JS AST and a selector AST, collect all JS AST nodes that match the selector.\n         */\n        function match(ast, selector) {\n            var ancestry = [], results = [], altSubjects, i, l, k, m;\n            if (!selector) { return results; }\n            altSubjects = subjects(selector);\n            estraverse.traverse(ast, {\n                enter: function (node, parent) {\n                    if (parent != null) { ancestry.unshift(parent); }\n                    if (matches(node, selector, ancestry)) {\n                        if (altSubjects.length) {\n                            for (i = 0, l = altSubjects.length; i < l; ++i) {\n                                if (matches(node, altSubjects[i], ancestry)) { results.push(node); }\n                                for (k = 0, m = ancestry.length; k < m; ++k) {\n                                    if (matches(ancestry[k], altSubjects[i], ancestry.slice(k + 1))) {\n                                        results.push(ancestry[k]);\n                                    }\n                                }\n                            }\n                        } else {\n                            results.push(node);\n                        }\n                    }\n                },\n                leave: function () { ancestry.shift(); }\n            });\n            return results;\n        }\n\n        /**\n         * Parse a selector string and return its AST.\n         */\n        function parse(selector) {\n            return parser.parse(selector);\n        }\n\n        /**\n         * Query the code AST using the selector string.\n         */\n        function query(ast, selector) {\n            return match(ast, parse(selector));\n        }\n\n        query.parse = parse;\n        query.match = match;\n        query.matches = matches;\n        return query.query = query;\n    }\n\n\n    if (typeof define === \"function\" && define.amd) {\n        define(esqueryModule);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = esqueryModule();\n    } else {\n        this.esquery = esqueryModule();\n    }\n\n})();\n","var result = (function(){\n  /*\n   * Generated by PEG.js 0.7.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n  \n  function quote(s) {\n    /*\n     * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a\n     * string literal except for the closing quote character, backslash,\n     * carriage return, line separator, paragraph separator, and line feed.\n     * Any character may appear in the form of an escape sequence.\n     *\n     * For portability, we also escape escape all control and non-ASCII\n     * characters. Note that \"\\0\" and \"\\v\" escape sequences are not used\n     * because JSHint does not like the first and IE the second.\n     */\n     return '\"' + s\n      .replace(/\\\\/g, '\\\\\\\\')  // backslash\n      .replace(/\"/g, '\\\\\"')    // closing quote character\n      .replace(/\\x08/g, '\\\\b') // backspace\n      .replace(/\\t/g, '\\\\t')   // horizontal tab\n      .replace(/\\n/g, '\\\\n')   // line feed\n      .replace(/\\f/g, '\\\\f')   // form feed\n      .replace(/\\r/g, '\\\\r')   // carriage return\n      .replace(/[\\x00-\\x07\\x0B\\x0E-\\x1F\\x80-\\uFFFF]/g, escape)\n      + '\"';\n  }\n  \n  var result = {\n    /*\n     * Parses the input with a generated parser. If the parsing is successfull,\n     * returns a value explicitly or implicitly specified by the grammar from\n     * which the parser was generated (see |PEG.buildParser|). If the parsing is\n     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.\n     */\n    parse: function(input, startRule) {\n      var parseFunctions = {\n        \"start\": parse_start,\n        \"_\": parse__,\n        \"identifierName\": parse_identifierName,\n        \"binaryOp\": parse_binaryOp,\n        \"selectors\": parse_selectors,\n        \"selector\": parse_selector,\n        \"sequence\": parse_sequence,\n        \"atom\": parse_atom,\n        \"wildcard\": parse_wildcard,\n        \"identifier\": parse_identifier,\n        \"attr\": parse_attr,\n        \"attrOps\": parse_attrOps,\n        \"attrEqOps\": parse_attrEqOps,\n        \"attrName\": parse_attrName,\n        \"attrValue\": parse_attrValue,\n        \"string\": parse_string,\n        \"number\": parse_number,\n        \"path\": parse_path,\n        \"type\": parse_type,\n        \"regex\": parse_regex,\n        \"field\": parse_field,\n        \"negation\": parse_negation,\n        \"matches\": parse_matches,\n        \"firstChild\": parse_firstChild,\n        \"lastChild\": parse_lastChild,\n        \"nthChild\": parse_nthChild,\n        \"nthLastChild\": parse_nthLastChild,\n        \"class\": parse_class\n      };\n      \n      if (startRule !== undefined) {\n        if (parseFunctions[startRule] === undefined) {\n          throw new Error(\"Invalid rule name: \" + quote(startRule) + \".\");\n        }\n      } else {\n        startRule = \"start\";\n      }\n      \n      var pos = 0;\n      var reportFailures = 0;\n      var rightmostFailuresPos = 0;\n      var rightmostFailuresExpected = [];\n      var cache = {};\n      \n      function padLeft(input, padding, length) {\n        var result = input;\n        \n        var padLength = length - input.length;\n        for (var i = 0; i < padLength; i++) {\n          result = padding + result;\n        }\n        \n        return result;\n      }\n      \n      function escape(ch) {\n        var charCode = ch.charCodeAt(0);\n        var escapeChar;\n        var length;\n        \n        if (charCode <= 0xFF) {\n          escapeChar = 'x';\n          length = 2;\n        } else {\n          escapeChar = 'u';\n          length = 4;\n        }\n        \n        return '\\\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);\n      }\n      \n      function matchFailed(failure) {\n        if (pos < rightmostFailuresPos) {\n          return;\n        }\n        \n        if (pos > rightmostFailuresPos) {\n          rightmostFailuresPos = pos;\n          rightmostFailuresExpected = [];\n        }\n        \n        rightmostFailuresExpected.push(failure);\n      }\n      \n      function parse_start() {\n        var cacheKey = \"start@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        result0 = parse__();\n        if (result0 !== null) {\n          result1 = parse_selectors();\n          if (result1 !== null) {\n            result2 = parse__();\n            if (result2 !== null) {\n              result0 = [result0, result1, result2];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, ss) { return ss.length === 1 ? ss[0] : { type: 'matches', selectors: ss }; })(pos0, result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        if (result0 === null) {\n          pos0 = pos;\n          result0 = parse__();\n          if (result0 !== null) {\n            result0 = (function(offset) { return void 0; })(pos0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse__() {\n        var cacheKey = \"_@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1;\n        \n        result0 = [];\n        if (input.charCodeAt(pos) === 32) {\n          result1 = \" \";\n          pos++;\n        } else {\n          result1 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\" \\\"\");\n          }\n        }\n        while (result1 !== null) {\n          result0.push(result1);\n          if (input.charCodeAt(pos) === 32) {\n            result1 = \" \";\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\" \\\"\");\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_identifierName() {\n        var cacheKey = \"identifierName@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1;\n        var pos0;\n        \n        pos0 = pos;\n        if (/^[^ [\\],():#!=><~+.]/.test(input.charAt(pos))) {\n          result1 = input.charAt(pos);\n          pos++;\n        } else {\n          result1 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[^ [\\\\],():#!=><~+.]\");\n          }\n        }\n        if (result1 !== null) {\n          result0 = [];\n          while (result1 !== null) {\n            result0.push(result1);\n            if (/^[^ [\\],():#!=><~+.]/.test(input.charAt(pos))) {\n              result1 = input.charAt(pos);\n              pos++;\n            } else {\n              result1 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^ [\\\\],():#!=><~+.]\");\n              }\n            }\n          }\n        } else {\n          result0 = null;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, i) { return i.join(''); })(pos0, result0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_binaryOp() {\n        var cacheKey = \"binaryOp@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        result0 = parse__();\n        if (result0 !== null) {\n          if (input.charCodeAt(pos) === 62) {\n            result1 = \">\";\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\">\\\"\");\n            }\n          }\n          if (result1 !== null) {\n            result2 = parse__();\n            if (result2 !== null) {\n              result0 = [result0, result1, result2];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset) { return 'child'; })(pos0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        if (result0 === null) {\n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse__();\n          if (result0 !== null) {\n            if (input.charCodeAt(pos) === 126) {\n              result1 = \"~\";\n              pos++;\n            } else {\n              result1 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"~\\\"\");\n              }\n            }\n            if (result1 !== null) {\n              result2 = parse__();\n              if (result2 !== null) {\n                result0 = [result0, result1, result2];\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset) { return 'sibling'; })(pos0);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          if (result0 === null) {\n            pos0 = pos;\n            pos1 = pos;\n            result0 = parse__();\n            if (result0 !== null) {\n              if (input.charCodeAt(pos) === 43) {\n                result1 = \"+\";\n                pos++;\n              } else {\n                result1 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"+\\\"\");\n                }\n              }\n              if (result1 !== null) {\n                result2 = parse__();\n                if (result2 !== null) {\n                  result0 = [result0, result1, result2];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n            if (result0 !== null) {\n              result0 = (function(offset) { return 'adjacent'; })(pos0);\n            }\n            if (result0 === null) {\n              pos = pos0;\n            }\n            if (result0 === null) {\n              pos0 = pos;\n              pos1 = pos;\n              if (input.charCodeAt(pos) === 32) {\n                result0 = \" \";\n                pos++;\n              } else {\n                result0 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\" \\\"\");\n                }\n              }\n              if (result0 !== null) {\n                result1 = parse__();\n                if (result1 !== null) {\n                  result0 = [result0, result1];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n              if (result0 !== null) {\n                result0 = (function(offset) { return 'descendant'; })(pos0);\n              }\n              if (result0 === null) {\n                pos = pos0;\n              }\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_selectors() {\n        var cacheKey = \"selectors@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4, result5;\n        var pos0, pos1, pos2;\n        \n        pos0 = pos;\n        pos1 = pos;\n        result0 = parse_selector();\n        if (result0 !== null) {\n          result1 = [];\n          pos2 = pos;\n          result2 = parse__();\n          if (result2 !== null) {\n            if (input.charCodeAt(pos) === 44) {\n              result3 = \",\";\n              pos++;\n            } else {\n              result3 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\",\\\"\");\n              }\n            }\n            if (result3 !== null) {\n              result4 = parse__();\n              if (result4 !== null) {\n                result5 = parse_selector();\n                if (result5 !== null) {\n                  result2 = [result2, result3, result4, result5];\n                } else {\n                  result2 = null;\n                  pos = pos2;\n                }\n              } else {\n                result2 = null;\n                pos = pos2;\n              }\n            } else {\n              result2 = null;\n              pos = pos2;\n            }\n          } else {\n            result2 = null;\n            pos = pos2;\n          }\n          while (result2 !== null) {\n            result1.push(result2);\n            pos2 = pos;\n            result2 = parse__();\n            if (result2 !== null) {\n              if (input.charCodeAt(pos) === 44) {\n                result3 = \",\";\n                pos++;\n              } else {\n                result3 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\",\\\"\");\n                }\n              }\n              if (result3 !== null) {\n                result4 = parse__();\n                if (result4 !== null) {\n                  result5 = parse_selector();\n                  if (result5 !== null) {\n                    result2 = [result2, result3, result4, result5];\n                  } else {\n                    result2 = null;\n                    pos = pos2;\n                  }\n                } else {\n                  result2 = null;\n                  pos = pos2;\n                }\n              } else {\n                result2 = null;\n                pos = pos2;\n              }\n            } else {\n              result2 = null;\n              pos = pos2;\n            }\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, s, ss) {\n          return [s].concat(ss.map(function (s) { return s[3]; }));\n        })(pos0, result0[0], result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_selector() {\n        var cacheKey = \"selector@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3;\n        var pos0, pos1, pos2;\n        \n        pos0 = pos;\n        pos1 = pos;\n        result0 = parse_sequence();\n        if (result0 !== null) {\n          result1 = [];\n          pos2 = pos;\n          result2 = parse_binaryOp();\n          if (result2 !== null) {\n            result3 = parse_sequence();\n            if (result3 !== null) {\n              result2 = [result2, result3];\n            } else {\n              result2 = null;\n              pos = pos2;\n            }\n          } else {\n            result2 = null;\n            pos = pos2;\n          }\n          while (result2 !== null) {\n            result1.push(result2);\n            pos2 = pos;\n            result2 = parse_binaryOp();\n            if (result2 !== null) {\n              result3 = parse_sequence();\n              if (result3 !== null) {\n                result2 = [result2, result3];\n              } else {\n                result2 = null;\n                pos = pos2;\n              }\n            } else {\n              result2 = null;\n              pos = pos2;\n            }\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, a, ops) {\n            return ops.reduce(function (memo, rhs) {\n              return { type: rhs[0], left: memo, right: rhs[1] };\n            }, a);\n          })(pos0, result0[0], result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_sequence() {\n        var cacheKey = \"sequence@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 33) {\n          result0 = \"!\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"!\\\"\");\n          }\n        }\n        result0 = result0 !== null ? result0 : \"\";\n        if (result0 !== null) {\n          result2 = parse_atom();\n          if (result2 !== null) {\n            result1 = [];\n            while (result2 !== null) {\n              result1.push(result2);\n              result2 = parse_atom();\n            }\n          } else {\n            result1 = null;\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, subject, as) {\n            var b = as.length === 1 ? as[0] : { type: 'compound', selectors: as };\n            if(subject) b.subject = true;\n            return b;\n          })(pos0, result0[0], result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_atom() {\n        var cacheKey = \"atom@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0;\n        \n        result0 = parse_wildcard();\n        if (result0 === null) {\n          result0 = parse_identifier();\n          if (result0 === null) {\n            result0 = parse_attr();\n            if (result0 === null) {\n              result0 = parse_field();\n              if (result0 === null) {\n                result0 = parse_negation();\n                if (result0 === null) {\n                  result0 = parse_matches();\n                  if (result0 === null) {\n                    result0 = parse_firstChild();\n                    if (result0 === null) {\n                      result0 = parse_lastChild();\n                      if (result0 === null) {\n                        result0 = parse_nthChild();\n                        if (result0 === null) {\n                          result0 = parse_nthLastChild();\n                          if (result0 === null) {\n                            result0 = parse_class();\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_wildcard() {\n        var cacheKey = \"wildcard@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0;\n        var pos0;\n        \n        pos0 = pos;\n        if (input.charCodeAt(pos) === 42) {\n          result0 = \"*\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"*\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, a) { return { type: 'wildcard', value: a }; })(pos0, result0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_identifier() {\n        var cacheKey = \"identifier@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 35) {\n          result0 = \"#\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"#\\\"\");\n          }\n        }\n        result0 = result0 !== null ? result0 : \"\";\n        if (result0 !== null) {\n          result1 = parse_identifierName();\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, i) { return { type: 'identifier', value: i }; })(pos0, result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_attr() {\n        var cacheKey = \"attr@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 91) {\n          result0 = \"[\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"[\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse__();\n          if (result1 !== null) {\n            result2 = parse_attrValue();\n            if (result2 !== null) {\n              result3 = parse__();\n              if (result3 !== null) {\n                if (input.charCodeAt(pos) === 93) {\n                  result4 = \"]\";\n                  pos++;\n                } else {\n                  result4 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\"]\\\"\");\n                  }\n                }\n                if (result4 !== null) {\n                  result0 = [result0, result1, result2, result3, result4];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, v) { return v; })(pos0, result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_attrOps() {\n        var cacheKey = \"attrOps@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (/^[><!]/.test(input.charAt(pos))) {\n          result0 = input.charAt(pos);\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[><!]\");\n          }\n        }\n        result0 = result0 !== null ? result0 : \"\";\n        if (result0 !== null) {\n          if (input.charCodeAt(pos) === 61) {\n            result1 = \"=\";\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"=\\\"\");\n            }\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, a) { return a + '='; })(pos0, result0[0]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        if (result0 === null) {\n          if (/^[><]/.test(input.charAt(pos))) {\n            result0 = input.charAt(pos);\n            pos++;\n          } else {\n            result0 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[><]\");\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_attrEqOps() {\n        var cacheKey = \"attrEqOps@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 33) {\n          result0 = \"!\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"!\\\"\");\n          }\n        }\n        result0 = result0 !== null ? result0 : \"\";\n        if (result0 !== null) {\n          if (input.charCodeAt(pos) === 61) {\n            result1 = \"=\";\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"=\\\"\");\n            }\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, a) { return a + '='; })(pos0, result0[0]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_attrName() {\n        var cacheKey = \"attrName@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1;\n        var pos0;\n        \n        pos0 = pos;\n        result1 = parse_identifierName();\n        if (result1 === null) {\n          if (input.charCodeAt(pos) === 46) {\n            result1 = \".\";\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\".\\\"\");\n            }\n          }\n        }\n        if (result1 !== null) {\n          result0 = [];\n          while (result1 !== null) {\n            result0.push(result1);\n            result1 = parse_identifierName();\n            if (result1 === null) {\n              if (input.charCodeAt(pos) === 46) {\n                result1 = \".\";\n                pos++;\n              } else {\n                result1 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\".\\\"\");\n                }\n              }\n            }\n          }\n        } else {\n          result0 = null;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, i) { return i.join(''); })(pos0, result0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_attrValue() {\n        var cacheKey = \"attrValue@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        result0 = parse_attrName();\n        if (result0 !== null) {\n          result1 = parse__();\n          if (result1 !== null) {\n            result2 = parse_attrEqOps();\n            if (result2 !== null) {\n              result3 = parse__();\n              if (result3 !== null) {\n                result4 = parse_type();\n                if (result4 === null) {\n                  result4 = parse_regex();\n                }\n                if (result4 !== null) {\n                  result0 = [result0, result1, result2, result3, result4];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, name, op, value) {\n              return { type: 'attribute', name: name, operator: op, value: value };\n            })(pos0, result0[0], result0[2], result0[4]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        if (result0 === null) {\n          pos0 = pos;\n          pos1 = pos;\n          result0 = parse_attrName();\n          if (result0 !== null) {\n            result1 = parse__();\n            if (result1 !== null) {\n              result2 = parse_attrOps();\n              if (result2 !== null) {\n                result3 = parse__();\n                if (result3 !== null) {\n                  result4 = parse_string();\n                  if (result4 === null) {\n                    result4 = parse_number();\n                    if (result4 === null) {\n                      result4 = parse_path();\n                    }\n                  }\n                  if (result4 !== null) {\n                    result0 = [result0, result1, result2, result3, result4];\n                  } else {\n                    result0 = null;\n                    pos = pos1;\n                  }\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, name, op, value) {\n                return { type: 'attribute', name: name, operator: op, value: value };\n              })(pos0, result0[0], result0[2], result0[4]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n          if (result0 === null) {\n            pos0 = pos;\n            result0 = parse_attrName();\n            if (result0 !== null) {\n              result0 = (function(offset, name) { return { type: 'attribute', name: name }; })(pos0, result0);\n            }\n            if (result0 === null) {\n              pos = pos0;\n            }\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_string() {\n        var cacheKey = \"string@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3;\n        var pos0, pos1, pos2, pos3;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 34) {\n          result0 = \"\\\"\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"\\\\\\\"\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = [];\n          if (/^[^\\\\\"]/.test(input.charAt(pos))) {\n            result2 = input.charAt(pos);\n            pos++;\n          } else {\n            result2 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[^\\\\\\\\\\\"]\");\n            }\n          }\n          if (result2 === null) {\n            pos2 = pos;\n            pos3 = pos;\n            if (input.charCodeAt(pos) === 92) {\n              result2 = \"\\\\\";\n              pos++;\n            } else {\n              result2 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"\\\\\\\\\\\"\");\n              }\n            }\n            if (result2 !== null) {\n              if (input.length > pos) {\n                result3 = input.charAt(pos);\n                pos++;\n              } else {\n                result3 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"any character\");\n                }\n              }\n              if (result3 !== null) {\n                result2 = [result2, result3];\n              } else {\n                result2 = null;\n                pos = pos3;\n              }\n            } else {\n              result2 = null;\n              pos = pos3;\n            }\n            if (result2 !== null) {\n              result2 = (function(offset, a, b) { return a + b; })(pos2, result2[0], result2[1]);\n            }\n            if (result2 === null) {\n              pos = pos2;\n            }\n          }\n          while (result2 !== null) {\n            result1.push(result2);\n            if (/^[^\\\\\"]/.test(input.charAt(pos))) {\n              result2 = input.charAt(pos);\n              pos++;\n            } else {\n              result2 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^\\\\\\\\\\\"]\");\n              }\n            }\n            if (result2 === null) {\n              pos2 = pos;\n              pos3 = pos;\n              if (input.charCodeAt(pos) === 92) {\n                result2 = \"\\\\\";\n                pos++;\n              } else {\n                result2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"\\\\\\\\\\\"\");\n                }\n              }\n              if (result2 !== null) {\n                if (input.length > pos) {\n                  result3 = input.charAt(pos);\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"any character\");\n                  }\n                }\n                if (result3 !== null) {\n                  result2 = [result2, result3];\n                } else {\n                  result2 = null;\n                  pos = pos3;\n                }\n              } else {\n                result2 = null;\n                pos = pos3;\n              }\n              if (result2 !== null) {\n                result2 = (function(offset, a, b) { return a + b; })(pos2, result2[0], result2[1]);\n              }\n              if (result2 === null) {\n                pos = pos2;\n              }\n            }\n          }\n          if (result1 !== null) {\n            if (input.charCodeAt(pos) === 34) {\n              result2 = \"\\\"\";\n              pos++;\n            } else {\n              result2 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"\\\\\\\"\\\"\");\n              }\n            }\n            if (result2 !== null) {\n              result0 = [result0, result1, result2];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, d) {\n                return { type: 'literal', value: strUnescape(d.join('')) };\n              })(pos0, result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        if (result0 === null) {\n          pos0 = pos;\n          pos1 = pos;\n          if (input.charCodeAt(pos) === 39) {\n            result0 = \"'\";\n            pos++;\n          } else {\n            result0 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"'\\\"\");\n            }\n          }\n          if (result0 !== null) {\n            result1 = [];\n            if (/^[^\\\\']/.test(input.charAt(pos))) {\n              result2 = input.charAt(pos);\n              pos++;\n            } else {\n              result2 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^\\\\\\\\']\");\n              }\n            }\n            if (result2 === null) {\n              pos2 = pos;\n              pos3 = pos;\n              if (input.charCodeAt(pos) === 92) {\n                result2 = \"\\\\\";\n                pos++;\n              } else {\n                result2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"\\\\\\\\\\\"\");\n                }\n              }\n              if (result2 !== null) {\n                if (input.length > pos) {\n                  result3 = input.charAt(pos);\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"any character\");\n                  }\n                }\n                if (result3 !== null) {\n                  result2 = [result2, result3];\n                } else {\n                  result2 = null;\n                  pos = pos3;\n                }\n              } else {\n                result2 = null;\n                pos = pos3;\n              }\n              if (result2 !== null) {\n                result2 = (function(offset, a, b) { return a + b; })(pos2, result2[0], result2[1]);\n              }\n              if (result2 === null) {\n                pos = pos2;\n              }\n            }\n            while (result2 !== null) {\n              result1.push(result2);\n              if (/^[^\\\\']/.test(input.charAt(pos))) {\n                result2 = input.charAt(pos);\n                pos++;\n              } else {\n                result2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[^\\\\\\\\']\");\n                }\n              }\n              if (result2 === null) {\n                pos2 = pos;\n                pos3 = pos;\n                if (input.charCodeAt(pos) === 92) {\n                  result2 = \"\\\\\";\n                  pos++;\n                } else {\n                  result2 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\"\\\\\\\\\\\"\");\n                  }\n                }\n                if (result2 !== null) {\n                  if (input.length > pos) {\n                    result3 = input.charAt(pos);\n                    pos++;\n                  } else {\n                    result3 = null;\n                    if (reportFailures === 0) {\n                      matchFailed(\"any character\");\n                    }\n                  }\n                  if (result3 !== null) {\n                    result2 = [result2, result3];\n                  } else {\n                    result2 = null;\n                    pos = pos3;\n                  }\n                } else {\n                  result2 = null;\n                  pos = pos3;\n                }\n                if (result2 !== null) {\n                  result2 = (function(offset, a, b) { return a + b; })(pos2, result2[0], result2[1]);\n                }\n                if (result2 === null) {\n                  pos = pos2;\n                }\n              }\n            }\n            if (result1 !== null) {\n              if (input.charCodeAt(pos) === 39) {\n                result2 = \"'\";\n                pos++;\n              } else {\n                result2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"'\\\"\");\n                }\n              }\n              if (result2 !== null) {\n                result0 = [result0, result1, result2];\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n          if (result0 !== null) {\n            result0 = (function(offset, d) {\n                  return { type: 'literal', value: strUnescape(d.join('')) };\n                })(pos0, result0[1]);\n          }\n          if (result0 === null) {\n            pos = pos0;\n          }\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_number() {\n        var cacheKey = \"number@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2;\n        var pos0, pos1, pos2;\n        \n        pos0 = pos;\n        pos1 = pos;\n        pos2 = pos;\n        result0 = [];\n        if (/^[0-9]/.test(input.charAt(pos))) {\n          result1 = input.charAt(pos);\n          pos++;\n        } else {\n          result1 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[0-9]\");\n          }\n        }\n        while (result1 !== null) {\n          result0.push(result1);\n          if (/^[0-9]/.test(input.charAt(pos))) {\n            result1 = input.charAt(pos);\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[0-9]\");\n            }\n          }\n        }\n        if (result0 !== null) {\n          if (input.charCodeAt(pos) === 46) {\n            result1 = \".\";\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\".\\\"\");\n            }\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos2;\n          }\n        } else {\n          result0 = null;\n          pos = pos2;\n        }\n        result0 = result0 !== null ? result0 : \"\";\n        if (result0 !== null) {\n          if (/^[0-9]/.test(input.charAt(pos))) {\n            result2 = input.charAt(pos);\n            pos++;\n          } else {\n            result2 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[0-9]\");\n            }\n          }\n          if (result2 !== null) {\n            result1 = [];\n            while (result2 !== null) {\n              result1.push(result2);\n              if (/^[0-9]/.test(input.charAt(pos))) {\n                result2 = input.charAt(pos);\n                pos++;\n              } else {\n                result2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[0-9]\");\n                }\n              }\n            }\n          } else {\n            result1 = null;\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, a, b) {\n                return { type: 'literal', value: parseFloat((a ? a.join('') : '') + b.join('')) };\n              })(pos0, result0[0], result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_path() {\n        var cacheKey = \"path@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0;\n        var pos0;\n        \n        pos0 = pos;\n        result0 = parse_identifierName();\n        if (result0 !== null) {\n          result0 = (function(offset, i) { return { type: 'literal', value: i }; })(pos0, result0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_type() {\n        var cacheKey = \"type@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.substr(pos, 5) === \"type(\") {\n          result0 = \"type(\";\n          pos += 5;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"type(\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse__();\n          if (result1 !== null) {\n            if (/^[^ )]/.test(input.charAt(pos))) {\n              result3 = input.charAt(pos);\n              pos++;\n            } else {\n              result3 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^ )]\");\n              }\n            }\n            if (result3 !== null) {\n              result2 = [];\n              while (result3 !== null) {\n                result2.push(result3);\n                if (/^[^ )]/.test(input.charAt(pos))) {\n                  result3 = input.charAt(pos);\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"[^ )]\");\n                  }\n                }\n              }\n            } else {\n              result2 = null;\n            }\n            if (result2 !== null) {\n              result3 = parse__();\n              if (result3 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  result4 = \")\";\n                  pos++;\n                } else {\n                  result4 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (result4 !== null) {\n                  result0 = [result0, result1, result2, result3, result4];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, t) { return { type: 'type', value: t.join('') }; })(pos0, result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_regex() {\n        var cacheKey = \"regex@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 47) {\n          result0 = \"/\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"/\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          if (/^[^\\/]/.test(input.charAt(pos))) {\n            result2 = input.charAt(pos);\n            pos++;\n          } else {\n            result2 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[^\\\\/]\");\n            }\n          }\n          if (result2 !== null) {\n            result1 = [];\n            while (result2 !== null) {\n              result1.push(result2);\n              if (/^[^\\/]/.test(input.charAt(pos))) {\n                result2 = input.charAt(pos);\n                pos++;\n              } else {\n                result2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[^\\\\/]\");\n                }\n              }\n            }\n          } else {\n            result1 = null;\n          }\n          if (result1 !== null) {\n            if (input.charCodeAt(pos) === 47) {\n              result2 = \"/\";\n              pos++;\n            } else {\n              result2 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"/\\\"\");\n              }\n            }\n            if (result2 !== null) {\n              result0 = [result0, result1, result2];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, d) { return { type: 'regexp', value: new RegExp(d.join('')) }; })(pos0, result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_field() {\n        var cacheKey = \"field@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4;\n        var pos0, pos1, pos2;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 46) {\n          result0 = \".\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\".\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse_identifierName();\n          if (result1 !== null) {\n            result2 = [];\n            pos2 = pos;\n            if (input.charCodeAt(pos) === 46) {\n              result3 = \".\";\n              pos++;\n            } else {\n              result3 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\".\\\"\");\n              }\n            }\n            if (result3 !== null) {\n              result4 = parse_identifierName();\n              if (result4 !== null) {\n                result3 = [result3, result4];\n              } else {\n                result3 = null;\n                pos = pos2;\n              }\n            } else {\n              result3 = null;\n              pos = pos2;\n            }\n            while (result3 !== null) {\n              result2.push(result3);\n              pos2 = pos;\n              if (input.charCodeAt(pos) === 46) {\n                result3 = \".\";\n                pos++;\n              } else {\n                result3 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\".\\\"\");\n                }\n              }\n              if (result3 !== null) {\n                result4 = parse_identifierName();\n                if (result4 !== null) {\n                  result3 = [result3, result4];\n                } else {\n                  result3 = null;\n                  pos = pos2;\n                }\n              } else {\n                result3 = null;\n                pos = pos2;\n              }\n            }\n            if (result2 !== null) {\n              result0 = [result0, result1, result2];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, i, is) {\n          return { type: 'field', name: is.reduce(function(memo, p){ return memo + p[0] + p[1]; }, i)};\n        })(pos0, result0[1], result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_negation() {\n        var cacheKey = \"negation@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.substr(pos, 5) === \":not(\") {\n          result0 = \":not(\";\n          pos += 5;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":not(\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse__();\n          if (result1 !== null) {\n            result2 = parse_selectors();\n            if (result2 !== null) {\n              result3 = parse__();\n              if (result3 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  result4 = \")\";\n                  pos++;\n                } else {\n                  result4 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (result4 !== null) {\n                  result0 = [result0, result1, result2, result3, result4];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, ss) { return { type: 'not', selectors: ss }; })(pos0, result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_matches() {\n        var cacheKey = \"matches@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.substr(pos, 9) === \":matches(\") {\n          result0 = \":matches(\";\n          pos += 9;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":matches(\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse__();\n          if (result1 !== null) {\n            result2 = parse_selectors();\n            if (result2 !== null) {\n              result3 = parse__();\n              if (result3 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  result4 = \")\";\n                  pos++;\n                } else {\n                  result4 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (result4 !== null) {\n                  result0 = [result0, result1, result2, result3, result4];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, ss) { return { type: 'matches', selectors: ss }; })(pos0, result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_firstChild() {\n        var cacheKey = \"firstChild@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0;\n        var pos0;\n        \n        pos0 = pos;\n        if (input.substr(pos, 12) === \":first-child\") {\n          result0 = \":first-child\";\n          pos += 12;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":first-child\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result0 = (function(offset) { return nth(1); })(pos0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_lastChild() {\n        var cacheKey = \"lastChild@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0;\n        var pos0;\n        \n        pos0 = pos;\n        if (input.substr(pos, 11) === \":last-child\") {\n          result0 = \":last-child\";\n          pos += 11;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":last-child\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result0 = (function(offset) { return nthLast(1); })(pos0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_nthChild() {\n        var cacheKey = \"nthChild@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.substr(pos, 11) === \":nth-child(\") {\n          result0 = \":nth-child(\";\n          pos += 11;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":nth-child(\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse__();\n          if (result1 !== null) {\n            if (/^[0-9]/.test(input.charAt(pos))) {\n              result3 = input.charAt(pos);\n              pos++;\n            } else {\n              result3 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[0-9]\");\n              }\n            }\n            if (result3 !== null) {\n              result2 = [];\n              while (result3 !== null) {\n                result2.push(result3);\n                if (/^[0-9]/.test(input.charAt(pos))) {\n                  result3 = input.charAt(pos);\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"[0-9]\");\n                  }\n                }\n              }\n            } else {\n              result2 = null;\n            }\n            if (result2 !== null) {\n              result3 = parse__();\n              if (result3 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  result4 = \")\";\n                  pos++;\n                } else {\n                  result4 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (result4 !== null) {\n                  result0 = [result0, result1, result2, result3, result4];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, n) { return nth(parseInt(n.join(''), 10)); })(pos0, result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_nthLastChild() {\n        var cacheKey = \"nthLastChild@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1, result2, result3, result4;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.substr(pos, 16) === \":nth-last-child(\") {\n          result0 = \":nth-last-child(\";\n          pos += 16;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":nth-last-child(\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse__();\n          if (result1 !== null) {\n            if (/^[0-9]/.test(input.charAt(pos))) {\n              result3 = input.charAt(pos);\n              pos++;\n            } else {\n              result3 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[0-9]\");\n              }\n            }\n            if (result3 !== null) {\n              result2 = [];\n              while (result3 !== null) {\n                result2.push(result3);\n                if (/^[0-9]/.test(input.charAt(pos))) {\n                  result3 = input.charAt(pos);\n                  pos++;\n                } else {\n                  result3 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"[0-9]\");\n                  }\n                }\n              }\n            } else {\n              result2 = null;\n            }\n            if (result2 !== null) {\n              result3 = parse__();\n              if (result3 !== null) {\n                if (input.charCodeAt(pos) === 41) {\n                  result4 = \")\";\n                  pos++;\n                } else {\n                  result4 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\")\\\"\");\n                  }\n                }\n                if (result4 !== null) {\n                  result0 = [result0, result1, result2, result3, result4];\n                } else {\n                  result0 = null;\n                  pos = pos1;\n                }\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, n) { return nthLast(parseInt(n.join(''), 10)); })(pos0, result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      function parse_class() {\n        var cacheKey = \"class@\" + pos;\n        var cachedResult = cache[cacheKey];\n        if (cachedResult) {\n          pos = cachedResult.nextPos;\n          return cachedResult.result;\n        }\n        \n        var result0, result1;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 58) {\n          result0 = \":\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          if (input.substr(pos, 9).toLowerCase() === \"statement\") {\n            result1 = input.substr(pos, 9);\n            pos += 9;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\"statement\\\"\");\n            }\n          }\n          if (result1 === null) {\n            if (input.substr(pos, 10).toLowerCase() === \"expression\") {\n              result1 = input.substr(pos, 10);\n              pos += 10;\n            } else {\n              result1 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\"expression\\\"\");\n              }\n            }\n            if (result1 === null) {\n              if (input.substr(pos, 11).toLowerCase() === \"declaration\") {\n                result1 = input.substr(pos, 11);\n                pos += 11;\n              } else {\n                result1 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"declaration\\\"\");\n                }\n              }\n              if (result1 === null) {\n                if (input.substr(pos, 8).toLowerCase() === \"function\") {\n                  result1 = input.substr(pos, 8);\n                  pos += 8;\n                } else {\n                  result1 = null;\n                  if (reportFailures === 0) {\n                    matchFailed(\"\\\"function\\\"\");\n                  }\n                }\n                if (result1 === null) {\n                  if (input.substr(pos, 7).toLowerCase() === \"pattern\") {\n                    result1 = input.substr(pos, 7);\n                    pos += 7;\n                  } else {\n                    result1 = null;\n                    if (reportFailures === 0) {\n                      matchFailed(\"\\\"pattern\\\"\");\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, c) {\n          return { type: 'class', name: c };\n        })(pos0, result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        \n        cache[cacheKey] = {\n          nextPos: pos,\n          result:  result0\n        };\n        return result0;\n      }\n      \n      \n      function cleanupExpected(expected) {\n        expected.sort();\n        \n        var lastExpected = null;\n        var cleanExpected = [];\n        for (var i = 0; i < expected.length; i++) {\n          if (expected[i] !== lastExpected) {\n            cleanExpected.push(expected[i]);\n            lastExpected = expected[i];\n          }\n        }\n        return cleanExpected;\n      }\n      \n      function computeErrorPosition() {\n        /*\n         * The first idea was to use |String.split| to break the input up to the\n         * error position along newlines and derive the line and column from\n         * there. However IE's |split| implementation is so broken that it was\n         * enough to prevent it.\n         */\n        \n        var line = 1;\n        var column = 1;\n        var seenCR = false;\n        \n        for (var i = 0; i < Math.max(pos, rightmostFailuresPos); i++) {\n          var ch = input.charAt(i);\n          if (ch === \"\\n\") {\n            if (!seenCR) { line++; }\n            column = 1;\n            seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            line++;\n            column = 1;\n            seenCR = true;\n          } else {\n            column++;\n            seenCR = false;\n          }\n        }\n        \n        return { line: line, column: column };\n      }\n      \n      \n        function nth(n) { return { type: 'nth-child', index: { type: 'literal', value: n } }; }\n        function nthLast(n) { return { type: 'nth-last-child', index: { type: 'literal', value: n } }; }\n        function strUnescape(s) {\n          return s.replace(/\\\\(.)/g, function(match, ch) {\n            switch(ch) {\n              case 'a': return '\\a';\n              case 'b': return '\\b';\n              case 'f': return '\\f';\n              case 'n': return '\\n';\n              case 'r': return '\\r';\n              case 't': return '\\t';\n              case 'v': return '\\v';\n              default: return ch;\n            }\n          });\n        }\n      \n      \n      var result = parseFunctions[startRule]();\n      \n      /*\n       * The parser is now in one of the following three states:\n       *\n       * 1. The parser successfully parsed the whole input.\n       *\n       *    - |result !== null|\n       *    - |pos === input.length|\n       *    - |rightmostFailuresExpected| may or may not contain something\n       *\n       * 2. The parser successfully parsed only a part of the input.\n       *\n       *    - |result !== null|\n       *    - |pos < input.length|\n       *    - |rightmostFailuresExpected| may or may not contain something\n       *\n       * 3. The parser did not successfully parse any part of the input.\n       *\n       *   - |result === null|\n       *   - |pos === 0|\n       *   - |rightmostFailuresExpected| contains at least one failure\n       *\n       * All code following this comment (including called functions) must\n       * handle these states.\n       */\n      if (result === null || pos !== input.length) {\n        var offset = Math.max(pos, rightmostFailuresPos);\n        var found = offset < input.length ? input.charAt(offset) : null;\n        var errorPosition = computeErrorPosition();\n        \n        throw new this.SyntaxError(\n          cleanupExpected(rightmostFailuresExpected),\n          found,\n          offset,\n          errorPosition.line,\n          errorPosition.column\n        );\n      }\n      \n      return result;\n    },\n    \n    /* Returns the parser source code. */\n    toSource: function() { return this._source; }\n  };\n  \n  /* Thrown when a parser encounters a syntax error. */\n  \n  result.SyntaxError = function(expected, found, offset, line, column) {\n    function buildMessage(expected, found) {\n      var expectedHumanized, foundHumanized;\n      \n      switch (expected.length) {\n        case 0:\n          expectedHumanized = \"end of input\";\n          break;\n        case 1:\n          expectedHumanized = expected[0];\n          break;\n        default:\n          expectedHumanized = expected.slice(0, expected.length - 1).join(\", \")\n            + \" or \"\n            + expected[expected.length - 1];\n      }\n      \n      foundHumanized = found ? quote(found) : \"end of input\";\n      \n      return \"Expected \" + expectedHumanized + \" but \" + foundHumanized + \" found.\";\n    }\n    \n    this.name = \"SyntaxError\";\n    this.expected = expected;\n    this.found = found;\n    this.message = buildMessage(expected, found);\n    this.offset = offset;\n    this.line = line;\n    this.column = column;\n  };\n  \n  result.SyntaxError.prototype = Error.prototype;\n  \n  return result;\n})();\nif (typeof define === \"function\" && define.amd) { define(function(){ return result; }); } else if (typeof module !== \"undefined\" && module.exports) { module.exports = result; } else { this.esquery = result; }\n","/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true, define:true*/\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // and plain browser loading,\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.estraverse = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Syntax,\n        isArray,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP;\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MethodDefinition: 'MethodDefinition',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    function ignoreJSHintError() { }\n\n    isArray = Array.isArray;\n    if (!isArray) {\n        isArray = function isArray(array) {\n            return Object.prototype.toString.call(array) === '[object Array]';\n        };\n    }\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    function shallowCopy(obj) {\n        var ret = {}, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    ignoreJSHintError(shallowCopy);\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    function lowerBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                i = current + 1;\n                len -= diff + 1;\n            } else {\n                len = diff;\n            }\n        }\n        return i;\n    }\n    ignoreJSHintError(lowerBound);\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'body', 'superClass'],\n        ClassExpression: ['id', 'body', 'superClass'],\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MethodDefinition: ['key', 'value'],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handlers', 'handler', 'guardedHandlers', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n    };\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = element.wrap || node.type;\n                candidates = VisitorKeys[nodeType];\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (!isArray(candidate)) {\n                        worklist.push(new Element(candidate, key, null, null));\n                        continue;\n                    }\n\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if ((nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === candidates[current]) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', null);\n                        } else {\n                            element = new Element(candidate[current2], [key, current2], null, null);\n                        }\n                        worklist.push(element);\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = element.wrap || node.type;\n            candidates = VisitorKeys[nodeType];\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (!isArray(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                    continue;\n                }\n\n                current2 = candidate.length;\n                while ((current2 -= 1) >= 0) {\n                    if (!candidate[current2]) {\n                        continue;\n                    }\n                    if (nodeType === Syntax.ObjectExpression && 'properties' === candidates[current]) {\n                        element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                    } else {\n                        element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                    }\n                    worklist.push(element);\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.version = '1.3.3-dev';\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n"]}